{
  "version": 3,
  "sources": ["../../node_modules/read-excel-file/source/xml/xmlBrowser.js", "../../node_modules/fflate/esm/browser.js", "../../node_modules/read-excel-file/source/read/unpackXlsxFileBrowser.js", "../../node_modules/read-excel-file/source/xml/dom.js", "../../node_modules/read-excel-file/source/xml/xlsx.js", "../../node_modules/read-excel-file/source/read/parseProperties.js", "../../node_modules/read-excel-file/source/read/parseFilePaths.js", "../../node_modules/read-excel-file/source/read/parseStyles.js", "../../node_modules/read-excel-file/source/read/parseSharedStrings.js", "../../node_modules/read-excel-file/source/read/parseDate.js", "../../node_modules/read-excel-file/source/read/isDateTimestamp.js", "../../node_modules/read-excel-file/source/read/parseCellValue.js", "../../node_modules/read-excel-file/source/read/coordinates.js", "../../node_modules/read-excel-file/source/read/parseCell.js", "../../node_modules/read-excel-file/source/read/parseCells.js", "../../node_modules/read-excel-file/source/read/parseDimensions.js", "../../node_modules/read-excel-file/source/read/parseSheet.js", "../../node_modules/read-excel-file/source/read/dropEmptyRows.js", "../../node_modules/read-excel-file/source/read/dropEmptyColumns.js", "../../node_modules/read-excel-file/source/read/getData.js", "../../node_modules/read-excel-file/source/read/readXlsx.js", "../../node_modules/read-excel-file/source/types/InvalidError.js", "../../node_modules/read-excel-file/source/types/Number.js", "../../node_modules/read-excel-file/source/types/String.js", "../../node_modules/read-excel-file/source/types/Boolean.js", "../../node_modules/read-excel-file/source/types/Date.js", "../../node_modules/read-excel-file/source/read/schema/convertToJson.js", "../../node_modules/read-excel-file/source/read/schema/convertToJson.legacy.js", "../../node_modules/read-excel-file/source/read/schema/convertToJson.spreadsheet.js", "../../node_modules/read-excel-file/source/read/schema/convertMapToSchema.js", "../../node_modules/read-excel-file/source/read/readXlsxFileContents.js", "../../node_modules/read-excel-file/source/read/readXlsxFileBrowser.js", "../../node_modules/read-excel-file/source/read/readSheetNamesBrowser.js", "../../node_modules/read-excel-file/source/types/Integer.js", "../../node_modules/read-excel-file/source/types/Email.js", "../../node_modules/read-excel-file/source/types/URL.js"],
  "sourcesContent": ["export default {\r\n\tcreateDocument(content) {\r\n\t\t// if (!content) {\r\n\t\t// \tthrow new Error('No *.xml content')\r\n\t\t// }\r\n\t\t// A weird bug: it won't parse XML unless it's trimmed.\r\n\t\t// https://github.com/catamphetamine/read-excel-file/issues/21\r\n\t\treturn new DOMParser().parseFromString(content.trim(), 'text/xml')\r\n\t}\r\n}", "// DEFLATE is a complex format; to read this code, you should probably check the RFC first:\n// https://tools.ietf.org/html/rfc1951\n// You may also wish to take a look at the guide I made about this program:\n// https://gist.github.com/101arrowz/253f31eb5abc3d9275ab943003ffecad\n// Some of the following code is similar to that of UZIP.js:\n// https://github.com/photopea/UZIP.js\n// However, the vast majority of the codebase has diverged from UZIP.js to increase performance and reduce bundle size.\n// Sometimes 0 will appear where -1 would be more appropriate. This is because using a uint\n// is better for memory in most engines (I *think*).\nvar ch2 = {};\nvar wk = (function (c, id, msg, transfer, cb) {\n    var w = new Worker(ch2[id] || (ch2[id] = URL.createObjectURL(new Blob([\n        c + ';addEventListener(\"error\",function(e){e=e.error;postMessage({$e$:[e.message,e.code,e.stack]})})'\n    ], { type: 'text/javascript' }))));\n    w.onmessage = function (e) {\n        var d = e.data, ed = d.$e$;\n        if (ed) {\n            var err = new Error(ed[0]);\n            err['code'] = ed[1];\n            err.stack = ed[2];\n            cb(err, null);\n        }\n        else\n            cb(null, d);\n    };\n    w.postMessage(msg, transfer);\n    return w;\n});\n\n// aliases for shorter compressed code (most minifers don't do this)\nvar u8 = Uint8Array, u16 = Uint16Array, u32 = Uint32Array;\n// fixed length extra bits\nvar fleb = new u8([0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, /* unused */ 0, 0, /* impossible */ 0]);\n// fixed distance extra bits\n// see fleb note\nvar fdeb = new u8([0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, /* unused */ 0, 0]);\n// code length index map\nvar clim = new u8([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n// get base, reverse index map from extra bits\nvar freb = function (eb, start) {\n    var b = new u16(31);\n    for (var i = 0; i < 31; ++i) {\n        b[i] = start += 1 << eb[i - 1];\n    }\n    // numbers here are at max 18 bits\n    var r = new u32(b[30]);\n    for (var i = 1; i < 30; ++i) {\n        for (var j = b[i]; j < b[i + 1]; ++j) {\n            r[j] = ((j - b[i]) << 5) | i;\n        }\n    }\n    return [b, r];\n};\nvar _a = freb(fleb, 2), fl = _a[0], revfl = _a[1];\n// we can ignore the fact that the other numbers are wrong; they never happen anyway\nfl[28] = 258, revfl[258] = 28;\nvar _b = freb(fdeb, 0), fd = _b[0], revfd = _b[1];\n// map of value to reverse (assuming 16 bits)\nvar rev = new u16(32768);\nfor (var i = 0; i < 32768; ++i) {\n    // reverse table algorithm from SO\n    var x = ((i & 0xAAAA) >>> 1) | ((i & 0x5555) << 1);\n    x = ((x & 0xCCCC) >>> 2) | ((x & 0x3333) << 2);\n    x = ((x & 0xF0F0) >>> 4) | ((x & 0x0F0F) << 4);\n    rev[i] = (((x & 0xFF00) >>> 8) | ((x & 0x00FF) << 8)) >>> 1;\n}\n// create huffman tree from u8 \"map\": index -> code length for code index\n// mb (max bits) must be at most 15\n// TODO: optimize/split up?\nvar hMap = (function (cd, mb, r) {\n    var s = cd.length;\n    // index\n    var i = 0;\n    // u16 \"map\": index -> # of codes with bit length = index\n    var l = new u16(mb);\n    // length of cd must be 288 (total # of codes)\n    for (; i < s; ++i) {\n        if (cd[i])\n            ++l[cd[i] - 1];\n    }\n    // u16 \"map\": index -> minimum code for bit length = index\n    var le = new u16(mb);\n    for (i = 0; i < mb; ++i) {\n        le[i] = (le[i - 1] + l[i - 1]) << 1;\n    }\n    var co;\n    if (r) {\n        // u16 \"map\": index -> number of actual bits, symbol for code\n        co = new u16(1 << mb);\n        // bits to remove for reverser\n        var rvb = 15 - mb;\n        for (i = 0; i < s; ++i) {\n            // ignore 0 lengths\n            if (cd[i]) {\n                // num encoding both symbol and bits read\n                var sv = (i << 4) | cd[i];\n                // free bits\n                var r_1 = mb - cd[i];\n                // start value\n                var v = le[cd[i] - 1]++ << r_1;\n                // m is end value\n                for (var m = v | ((1 << r_1) - 1); v <= m; ++v) {\n                    // every 16 bit value starting with the code yields the same result\n                    co[rev[v] >>> rvb] = sv;\n                }\n            }\n        }\n    }\n    else {\n        co = new u16(s);\n        for (i = 0; i < s; ++i) {\n            if (cd[i]) {\n                co[i] = rev[le[cd[i] - 1]++] >>> (15 - cd[i]);\n            }\n        }\n    }\n    return co;\n});\n// fixed length tree\nvar flt = new u8(288);\nfor (var i = 0; i < 144; ++i)\n    flt[i] = 8;\nfor (var i = 144; i < 256; ++i)\n    flt[i] = 9;\nfor (var i = 256; i < 280; ++i)\n    flt[i] = 7;\nfor (var i = 280; i < 288; ++i)\n    flt[i] = 8;\n// fixed distance tree\nvar fdt = new u8(32);\nfor (var i = 0; i < 32; ++i)\n    fdt[i] = 5;\n// fixed length map\nvar flm = /*#__PURE__*/ hMap(flt, 9, 0), flrm = /*#__PURE__*/ hMap(flt, 9, 1);\n// fixed distance map\nvar fdm = /*#__PURE__*/ hMap(fdt, 5, 0), fdrm = /*#__PURE__*/ hMap(fdt, 5, 1);\n// find max of array\nvar max = function (a) {\n    var m = a[0];\n    for (var i = 1; i < a.length; ++i) {\n        if (a[i] > m)\n            m = a[i];\n    }\n    return m;\n};\n// read d, starting at bit p and mask with m\nvar bits = function (d, p, m) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8)) >> (p & 7)) & m;\n};\n// read d, starting at bit p continuing for at least 16 bits\nvar bits16 = function (d, p) {\n    var o = (p / 8) | 0;\n    return ((d[o] | (d[o + 1] << 8) | (d[o + 2] << 16)) >> (p & 7));\n};\n// get end of byte\nvar shft = function (p) { return ((p + 7) / 8) | 0; };\n// typed array slice - allows garbage collector to free original reference,\n// while being more compatible than .slice\nvar slc = function (v, s, e) {\n    if (s == null || s < 0)\n        s = 0;\n    if (e == null || e > v.length)\n        e = v.length;\n    // can't use .constructor in case user-supplied\n    var n = new (v.BYTES_PER_ELEMENT == 2 ? u16 : v.BYTES_PER_ELEMENT == 4 ? u32 : u8)(e - s);\n    n.set(v.subarray(s, e));\n    return n;\n};\n/**\n * Codes for errors generated within this library\n */\nexport var FlateErrorCode = {\n    UnexpectedEOF: 0,\n    InvalidBlockType: 1,\n    InvalidLengthLiteral: 2,\n    InvalidDistance: 3,\n    StreamFinished: 4,\n    NoStreamHandler: 5,\n    InvalidHeader: 6,\n    NoCallback: 7,\n    InvalidUTF8: 8,\n    ExtraFieldTooLong: 9,\n    InvalidDate: 10,\n    FilenameTooLong: 11,\n    StreamFinishing: 12,\n    InvalidZipData: 13,\n    UnknownCompressionMethod: 14\n};\n// error codes\nvar ec = [\n    'unexpected EOF',\n    'invalid block type',\n    'invalid length/literal',\n    'invalid distance',\n    'stream finished',\n    'no stream handler',\n    ,\n    'no callback',\n    'invalid UTF-8 data',\n    'extra field too long',\n    'date not in range 1980-2099',\n    'filename too long',\n    'stream finishing',\n    'invalid zip data'\n    // determined by unknown compression method\n];\n;\nvar err = function (ind, msg, nt) {\n    var e = new Error(msg || ec[ind]);\n    e.code = ind;\n    if (Error.captureStackTrace)\n        Error.captureStackTrace(e, err);\n    if (!nt)\n        throw e;\n    return e;\n};\n// expands raw DEFLATE data\nvar inflt = function (dat, buf, st) {\n    // source length\n    var sl = dat.length;\n    if (!sl || (st && st.f && !st.l))\n        return buf || new u8(0);\n    // have to estimate size\n    var noBuf = !buf || st;\n    // no state\n    var noSt = !st || st.i;\n    if (!st)\n        st = {};\n    // Assumes roughly 33% compression ratio average\n    if (!buf)\n        buf = new u8(sl * 3);\n    // ensure buffer can fit at least l elements\n    var cbuf = function (l) {\n        var bl = buf.length;\n        // need to increase size to fit\n        if (l > bl) {\n            // Double or set to necessary, whichever is greater\n            var nbuf = new u8(Math.max(bl * 2, l));\n            nbuf.set(buf);\n            buf = nbuf;\n        }\n    };\n    //  last chunk         bitpos           bytes\n    var final = st.f || 0, pos = st.p || 0, bt = st.b || 0, lm = st.l, dm = st.d, lbt = st.m, dbt = st.n;\n    // total bits\n    var tbts = sl * 8;\n    do {\n        if (!lm) {\n            // BFINAL - this is only 1 when last chunk is next\n            final = bits(dat, pos, 1);\n            // type: 0 = no compression, 1 = fixed huffman, 2 = dynamic huffman\n            var type = bits(dat, pos + 1, 3);\n            pos += 3;\n            if (!type) {\n                // go to end of byte boundary\n                var s = shft(pos) + 4, l = dat[s - 4] | (dat[s - 3] << 8), t = s + l;\n                if (t > sl) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                // ensure size\n                if (noBuf)\n                    cbuf(bt + l);\n                // Copy over uncompressed data\n                buf.set(dat.subarray(s, t), bt);\n                // Get new bitpos, update byte count\n                st.b = bt += l, st.p = pos = t * 8, st.f = final;\n                continue;\n            }\n            else if (type == 1)\n                lm = flrm, dm = fdrm, lbt = 9, dbt = 5;\n            else if (type == 2) {\n                //  literal                            lengths\n                var hLit = bits(dat, pos, 31) + 257, hcLen = bits(dat, pos + 10, 15) + 4;\n                var tl = hLit + bits(dat, pos + 5, 31) + 1;\n                pos += 14;\n                // length+distance tree\n                var ldt = new u8(tl);\n                // code length tree\n                var clt = new u8(19);\n                for (var i = 0; i < hcLen; ++i) {\n                    // use index map to get real code\n                    clt[clim[i]] = bits(dat, pos + i * 3, 7);\n                }\n                pos += hcLen * 3;\n                // code lengths bits\n                var clb = max(clt), clbmsk = (1 << clb) - 1;\n                // code lengths map\n                var clm = hMap(clt, clb, 1);\n                for (var i = 0; i < tl;) {\n                    var r = clm[bits(dat, pos, clbmsk)];\n                    // bits read\n                    pos += r & 15;\n                    // symbol\n                    var s = r >>> 4;\n                    // code length to copy\n                    if (s < 16) {\n                        ldt[i++] = s;\n                    }\n                    else {\n                        //  copy   count\n                        var c = 0, n = 0;\n                        if (s == 16)\n                            n = 3 + bits(dat, pos, 3), pos += 2, c = ldt[i - 1];\n                        else if (s == 17)\n                            n = 3 + bits(dat, pos, 7), pos += 3;\n                        else if (s == 18)\n                            n = 11 + bits(dat, pos, 127), pos += 7;\n                        while (n--)\n                            ldt[i++] = c;\n                    }\n                }\n                //    length tree                 distance tree\n                var lt = ldt.subarray(0, hLit), dt = ldt.subarray(hLit);\n                // max length bits\n                lbt = max(lt);\n                // max dist bits\n                dbt = max(dt);\n                lm = hMap(lt, lbt, 1);\n                dm = hMap(dt, dbt, 1);\n            }\n            else\n                err(1);\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n        }\n        // Make sure the buffer can hold this + the largest possible addition\n        // Maximum chunk size (practically, theoretically infinite) is 2^17;\n        if (noBuf)\n            cbuf(bt + 131072);\n        var lms = (1 << lbt) - 1, dms = (1 << dbt) - 1;\n        var lpos = pos;\n        for (;; lpos = pos) {\n            // bits read, code\n            var c = lm[bits16(dat, pos) & lms], sym = c >>> 4;\n            pos += c & 15;\n            if (pos > tbts) {\n                if (noSt)\n                    err(0);\n                break;\n            }\n            if (!c)\n                err(2);\n            if (sym < 256)\n                buf[bt++] = sym;\n            else if (sym == 256) {\n                lpos = pos, lm = null;\n                break;\n            }\n            else {\n                var add = sym - 254;\n                // no extra bits needed if less\n                if (sym > 264) {\n                    // index\n                    var i = sym - 257, b = fleb[i];\n                    add = bits(dat, pos, (1 << b) - 1) + fl[i];\n                    pos += b;\n                }\n                // dist\n                var d = dm[bits16(dat, pos) & dms], dsym = d >>> 4;\n                if (!d)\n                    err(3);\n                pos += d & 15;\n                var dt = fd[dsym];\n                if (dsym > 3) {\n                    var b = fdeb[dsym];\n                    dt += bits16(dat, pos) & ((1 << b) - 1), pos += b;\n                }\n                if (pos > tbts) {\n                    if (noSt)\n                        err(0);\n                    break;\n                }\n                if (noBuf)\n                    cbuf(bt + 131072);\n                var end = bt + add;\n                for (; bt < end; bt += 4) {\n                    buf[bt] = buf[bt - dt];\n                    buf[bt + 1] = buf[bt + 1 - dt];\n                    buf[bt + 2] = buf[bt + 2 - dt];\n                    buf[bt + 3] = buf[bt + 3 - dt];\n                }\n                bt = end;\n            }\n        }\n        st.l = lm, st.p = lpos, st.b = bt, st.f = final;\n        if (lm)\n            final = 1, st.m = lbt, st.d = dm, st.n = dbt;\n    } while (!final);\n    return bt == buf.length ? buf : slc(buf, 0, bt);\n};\n// starting at p, write the minimum number of bits that can hold v to d\nvar wbits = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n};\n// starting at p, write the minimum number of bits (>8) that can hold v to d\nvar wbits16 = function (d, p, v) {\n    v <<= p & 7;\n    var o = (p / 8) | 0;\n    d[o] |= v;\n    d[o + 1] |= v >>> 8;\n    d[o + 2] |= v >>> 16;\n};\n// creates code lengths from a frequency table\nvar hTree = function (d, mb) {\n    // Need extra info to make a tree\n    var t = [];\n    for (var i = 0; i < d.length; ++i) {\n        if (d[i])\n            t.push({ s: i, f: d[i] });\n    }\n    var s = t.length;\n    var t2 = t.slice();\n    if (!s)\n        return [et, 0];\n    if (s == 1) {\n        var v = new u8(t[0].s + 1);\n        v[t[0].s] = 1;\n        return [v, 1];\n    }\n    t.sort(function (a, b) { return a.f - b.f; });\n    // after i2 reaches last ind, will be stopped\n    // freq must be greater than largest possible number of symbols\n    t.push({ s: -1, f: 25001 });\n    var l = t[0], r = t[1], i0 = 0, i1 = 1, i2 = 2;\n    t[0] = { s: -1, f: l.f + r.f, l: l, r: r };\n    // efficient algorithm from UZIP.js\n    // i0 is lookbehind, i2 is lookahead - after processing two low-freq\n    // symbols that combined have high freq, will start processing i2 (high-freq,\n    // non-composite) symbols instead\n    // see https://reddit.com/r/photopea/comments/ikekht/uzipjs_questions/\n    while (i1 != s - 1) {\n        l = t[t[i0].f < t[i2].f ? i0++ : i2++];\n        r = t[i0 != i1 && t[i0].f < t[i2].f ? i0++ : i2++];\n        t[i1++] = { s: -1, f: l.f + r.f, l: l, r: r };\n    }\n    var maxSym = t2[0].s;\n    for (var i = 1; i < s; ++i) {\n        if (t2[i].s > maxSym)\n            maxSym = t2[i].s;\n    }\n    // code lengths\n    var tr = new u16(maxSym + 1);\n    // max bits in tree\n    var mbt = ln(t[i1 - 1], tr, 0);\n    if (mbt > mb) {\n        // more algorithms from UZIP.js\n        // TODO: find out how this code works (debt)\n        //  ind    debt\n        var i = 0, dt = 0;\n        //    left            cost\n        var lft = mbt - mb, cst = 1 << lft;\n        t2.sort(function (a, b) { return tr[b.s] - tr[a.s] || a.f - b.f; });\n        for (; i < s; ++i) {\n            var i2_1 = t2[i].s;\n            if (tr[i2_1] > mb) {\n                dt += cst - (1 << (mbt - tr[i2_1]));\n                tr[i2_1] = mb;\n            }\n            else\n                break;\n        }\n        dt >>>= lft;\n        while (dt > 0) {\n            var i2_2 = t2[i].s;\n            if (tr[i2_2] < mb)\n                dt -= 1 << (mb - tr[i2_2]++ - 1);\n            else\n                ++i;\n        }\n        for (; i >= 0 && dt; --i) {\n            var i2_3 = t2[i].s;\n            if (tr[i2_3] == mb) {\n                --tr[i2_3];\n                ++dt;\n            }\n        }\n        mbt = mb;\n    }\n    return [new u8(tr), mbt];\n};\n// get the max length and assign length codes\nvar ln = function (n, l, d) {\n    return n.s == -1\n        ? Math.max(ln(n.l, l, d + 1), ln(n.r, l, d + 1))\n        : (l[n.s] = d);\n};\n// length codes generation\nvar lc = function (c) {\n    var s = c.length;\n    // Note that the semicolon was intentional\n    while (s && !c[--s])\n        ;\n    var cl = new u16(++s);\n    //  ind      num         streak\n    var cli = 0, cln = c[0], cls = 1;\n    var w = function (v) { cl[cli++] = v; };\n    for (var i = 1; i <= s; ++i) {\n        if (c[i] == cln && i != s)\n            ++cls;\n        else {\n            if (!cln && cls > 2) {\n                for (; cls > 138; cls -= 138)\n                    w(32754);\n                if (cls > 2) {\n                    w(cls > 10 ? ((cls - 11) << 5) | 28690 : ((cls - 3) << 5) | 12305);\n                    cls = 0;\n                }\n            }\n            else if (cls > 3) {\n                w(cln), --cls;\n                for (; cls > 6; cls -= 6)\n                    w(8304);\n                if (cls > 2)\n                    w(((cls - 3) << 5) | 8208), cls = 0;\n            }\n            while (cls--)\n                w(cln);\n            cls = 1;\n            cln = c[i];\n        }\n    }\n    return [cl.subarray(0, cli), s];\n};\n// calculate the length of output from tree, code lengths\nvar clen = function (cf, cl) {\n    var l = 0;\n    for (var i = 0; i < cl.length; ++i)\n        l += cf[i] * cl[i];\n    return l;\n};\n// writes a fixed block\n// returns the new bit pos\nvar wfblk = function (out, pos, dat) {\n    // no need to write 00 as type: TypedArray defaults to 0\n    var s = dat.length;\n    var o = shft(pos + 2);\n    out[o] = s & 255;\n    out[o + 1] = s >>> 8;\n    out[o + 2] = out[o] ^ 255;\n    out[o + 3] = out[o + 1] ^ 255;\n    for (var i = 0; i < s; ++i)\n        out[o + i + 4] = dat[i];\n    return (o + 4 + s) * 8;\n};\n// writes a block\nvar wblk = function (dat, out, final, syms, lf, df, eb, li, bs, bl, p) {\n    wbits(out, p++, final);\n    ++lf[256];\n    var _a = hTree(lf, 15), dlt = _a[0], mlb = _a[1];\n    var _b = hTree(df, 15), ddt = _b[0], mdb = _b[1];\n    var _c = lc(dlt), lclt = _c[0], nlc = _c[1];\n    var _d = lc(ddt), lcdt = _d[0], ndc = _d[1];\n    var lcfreq = new u16(19);\n    for (var i = 0; i < lclt.length; ++i)\n        lcfreq[lclt[i] & 31]++;\n    for (var i = 0; i < lcdt.length; ++i)\n        lcfreq[lcdt[i] & 31]++;\n    var _e = hTree(lcfreq, 7), lct = _e[0], mlcb = _e[1];\n    var nlcc = 19;\n    for (; nlcc > 4 && !lct[clim[nlcc - 1]]; --nlcc)\n        ;\n    var flen = (bl + 5) << 3;\n    var ftlen = clen(lf, flt) + clen(df, fdt) + eb;\n    var dtlen = clen(lf, dlt) + clen(df, ddt) + eb + 14 + 3 * nlcc + clen(lcfreq, lct) + (2 * lcfreq[16] + 3 * lcfreq[17] + 7 * lcfreq[18]);\n    if (flen <= ftlen && flen <= dtlen)\n        return wfblk(out, p, dat.subarray(bs, bs + bl));\n    var lm, ll, dm, dl;\n    wbits(out, p, 1 + (dtlen < ftlen)), p += 2;\n    if (dtlen < ftlen) {\n        lm = hMap(dlt, mlb, 0), ll = dlt, dm = hMap(ddt, mdb, 0), dl = ddt;\n        var llm = hMap(lct, mlcb, 0);\n        wbits(out, p, nlc - 257);\n        wbits(out, p + 5, ndc - 1);\n        wbits(out, p + 10, nlcc - 4);\n        p += 14;\n        for (var i = 0; i < nlcc; ++i)\n            wbits(out, p + 3 * i, lct[clim[i]]);\n        p += 3 * nlcc;\n        var lcts = [lclt, lcdt];\n        for (var it = 0; it < 2; ++it) {\n            var clct = lcts[it];\n            for (var i = 0; i < clct.length; ++i) {\n                var len = clct[i] & 31;\n                wbits(out, p, llm[len]), p += lct[len];\n                if (len > 15)\n                    wbits(out, p, (clct[i] >>> 5) & 127), p += clct[i] >>> 12;\n            }\n        }\n    }\n    else {\n        lm = flm, ll = flt, dm = fdm, dl = fdt;\n    }\n    for (var i = 0; i < li; ++i) {\n        if (syms[i] > 255) {\n            var len = (syms[i] >>> 18) & 31;\n            wbits16(out, p, lm[len + 257]), p += ll[len + 257];\n            if (len > 7)\n                wbits(out, p, (syms[i] >>> 23) & 31), p += fleb[len];\n            var dst = syms[i] & 31;\n            wbits16(out, p, dm[dst]), p += dl[dst];\n            if (dst > 3)\n                wbits16(out, p, (syms[i] >>> 5) & 8191), p += fdeb[dst];\n        }\n        else {\n            wbits16(out, p, lm[syms[i]]), p += ll[syms[i]];\n        }\n    }\n    wbits16(out, p, lm[256]);\n    return p + ll[256];\n};\n// deflate options (nice << 13) | chain\nvar deo = /*#__PURE__*/ new u32([65540, 131080, 131088, 131104, 262176, 1048704, 1048832, 2114560, 2117632]);\n// empty\nvar et = /*#__PURE__*/ new u8(0);\n// compresses data into a raw DEFLATE buffer\nvar dflt = function (dat, lvl, plvl, pre, post, lst) {\n    var s = dat.length;\n    var o = new u8(pre + s + 5 * (1 + Math.ceil(s / 7000)) + post);\n    // writing to this writes to the output buffer\n    var w = o.subarray(pre, o.length - post);\n    var pos = 0;\n    if (!lvl || s < 8) {\n        for (var i = 0; i <= s; i += 65535) {\n            // end\n            var e = i + 65535;\n            if (e >= s) {\n                // write final block\n                w[pos >> 3] = lst;\n            }\n            pos = wfblk(w, pos + 1, dat.subarray(i, e));\n        }\n    }\n    else {\n        var opt = deo[lvl - 1];\n        var n = opt >>> 13, c = opt & 8191;\n        var msk_1 = (1 << plvl) - 1;\n        //    prev 2-byte val map    curr 2-byte val map\n        var prev = new u16(32768), head = new u16(msk_1 + 1);\n        var bs1_1 = Math.ceil(plvl / 3), bs2_1 = 2 * bs1_1;\n        var hsh = function (i) { return (dat[i] ^ (dat[i + 1] << bs1_1) ^ (dat[i + 2] << bs2_1)) & msk_1; };\n        // 24576 is an arbitrary number of maximum symbols per block\n        // 424 buffer for last block\n        var syms = new u32(25000);\n        // length/literal freq   distance freq\n        var lf = new u16(288), df = new u16(32);\n        //  l/lcnt  exbits  index  l/lind  waitdx  bitpos\n        var lc_1 = 0, eb = 0, i = 0, li = 0, wi = 0, bs = 0;\n        for (; i < s; ++i) {\n            // hash value\n            // deopt when i > s - 3 - at end, deopt acceptable\n            var hv = hsh(i);\n            // index mod 32768    previous index mod\n            var imod = i & 32767, pimod = head[hv];\n            prev[imod] = pimod;\n            head[hv] = imod;\n            // We always should modify head and prev, but only add symbols if\n            // this data is not yet processed (\"wait\" for wait index)\n            if (wi <= i) {\n                // bytes remaining\n                var rem = s - i;\n                if ((lc_1 > 7000 || li > 24576) && rem > 423) {\n                    pos = wblk(dat, w, 0, syms, lf, df, eb, li, bs, i - bs, pos);\n                    li = lc_1 = eb = 0, bs = i;\n                    for (var j = 0; j < 286; ++j)\n                        lf[j] = 0;\n                    for (var j = 0; j < 30; ++j)\n                        df[j] = 0;\n                }\n                //  len    dist   chain\n                var l = 2, d = 0, ch_1 = c, dif = (imod - pimod) & 32767;\n                if (rem > 2 && hv == hsh(i - dif)) {\n                    var maxn = Math.min(n, rem) - 1;\n                    var maxd = Math.min(32767, i);\n                    // max possible length\n                    // not capped at dif because decompressors implement \"rolling\" index population\n                    var ml = Math.min(258, rem);\n                    while (dif <= maxd && --ch_1 && imod != pimod) {\n                        if (dat[i + l] == dat[i + l - dif]) {\n                            var nl = 0;\n                            for (; nl < ml && dat[i + nl] == dat[i + nl - dif]; ++nl)\n                                ;\n                            if (nl > l) {\n                                l = nl, d = dif;\n                                // break out early when we reach \"nice\" (we are satisfied enough)\n                                if (nl > maxn)\n                                    break;\n                                // now, find the rarest 2-byte sequence within this\n                                // length of literals and search for that instead.\n                                // Much faster than just using the start\n                                var mmd = Math.min(dif, nl - 2);\n                                var md = 0;\n                                for (var j = 0; j < mmd; ++j) {\n                                    var ti = (i - dif + j + 32768) & 32767;\n                                    var pti = prev[ti];\n                                    var cd = (ti - pti + 32768) & 32767;\n                                    if (cd > md)\n                                        md = cd, pimod = ti;\n                                }\n                            }\n                        }\n                        // check the previous match\n                        imod = pimod, pimod = prev[imod];\n                        dif += (imod - pimod + 32768) & 32767;\n                    }\n                }\n                // d will be nonzero only when a match was found\n                if (d) {\n                    // store both dist and len data in one Uint32\n                    // Make sure this is recognized as a len/dist with 28th bit (2^28)\n                    syms[li++] = 268435456 | (revfl[l] << 18) | revfd[d];\n                    var lin = revfl[l] & 31, din = revfd[d] & 31;\n                    eb += fleb[lin] + fdeb[din];\n                    ++lf[257 + lin];\n                    ++df[din];\n                    wi = i + l;\n                    ++lc_1;\n                }\n                else {\n                    syms[li++] = dat[i];\n                    ++lf[dat[i]];\n                }\n            }\n        }\n        pos = wblk(dat, w, lst, syms, lf, df, eb, li, bs, i - bs, pos);\n        // this is the easiest way to avoid needing to maintain state\n        if (!lst && pos & 7)\n            pos = wfblk(w, pos + 1, et);\n    }\n    return slc(o, 0, pre + shft(pos) + post);\n};\n// CRC32 table\nvar crct = /*#__PURE__*/ (function () {\n    var t = new Int32Array(256);\n    for (var i = 0; i < 256; ++i) {\n        var c = i, k = 9;\n        while (--k)\n            c = ((c & 1) && -306674912) ^ (c >>> 1);\n        t[i] = c;\n    }\n    return t;\n})();\n// CRC32\nvar crc = function () {\n    var c = -1;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var cr = c;\n            for (var i = 0; i < d.length; ++i)\n                cr = crct[(cr & 255) ^ d[i]] ^ (cr >>> 8);\n            c = cr;\n        },\n        d: function () { return ~c; }\n    };\n};\n// Alder32\nvar adler = function () {\n    var a = 1, b = 0;\n    return {\n        p: function (d) {\n            // closures have awful performance\n            var n = a, m = b;\n            var l = d.length | 0;\n            for (var i = 0; i != l;) {\n                var e = Math.min(i + 2655, l);\n                for (; i < e; ++i)\n                    m += n += d[i];\n                n = (n & 65535) + 15 * (n >> 16), m = (m & 65535) + 15 * (m >> 16);\n            }\n            a = n, b = m;\n        },\n        d: function () {\n            a %= 65521, b %= 65521;\n            return (a & 255) << 24 | (a >>> 8) << 16 | (b & 255) << 8 | (b >>> 8);\n        }\n    };\n};\n;\n// deflate with opts\nvar dopt = function (dat, opt, pre, post, st) {\n    return dflt(dat, opt.level == null ? 6 : opt.level, opt.mem == null ? Math.ceil(Math.max(8, Math.min(13, Math.log(dat.length))) * 1.5) : (12 + opt.mem), pre, post, !st);\n};\n// Walmart object spread\nvar mrg = function (a, b) {\n    var o = {};\n    for (var k in a)\n        o[k] = a[k];\n    for (var k in b)\n        o[k] = b[k];\n    return o;\n};\n// worker clone\n// This is possibly the craziest part of the entire codebase, despite how simple it may seem.\n// The only parameter to this function is a closure that returns an array of variables outside of the function scope.\n// We're going to try to figure out the variable names used in the closure as strings because that is crucial for workerization.\n// We will return an object mapping of true variable name to value (basically, the current scope as a JS object).\n// The reason we can't just use the original variable names is minifiers mangling the toplevel scope.\n// This took me three weeks to figure out how to do.\nvar wcln = function (fn, fnStr, td) {\n    var dt = fn();\n    var st = fn.toString();\n    var ks = st.slice(st.indexOf('[') + 1, st.lastIndexOf(']')).replace(/\\s+/g, '').split(',');\n    for (var i = 0; i < dt.length; ++i) {\n        var v = dt[i], k = ks[i];\n        if (typeof v == 'function') {\n            fnStr += ';' + k + '=';\n            var st_1 = v.toString();\n            if (v.prototype) {\n                // for global objects\n                if (st_1.indexOf('[native code]') != -1) {\n                    var spInd = st_1.indexOf(' ', 8) + 1;\n                    fnStr += st_1.slice(spInd, st_1.indexOf('(', spInd));\n                }\n                else {\n                    fnStr += st_1;\n                    for (var t in v.prototype)\n                        fnStr += ';' + k + '.prototype.' + t + '=' + v.prototype[t].toString();\n                }\n            }\n            else\n                fnStr += st_1;\n        }\n        else\n            td[k] = v;\n    }\n    return [fnStr, td];\n};\nvar ch = [];\n// clone bufs\nvar cbfs = function (v) {\n    var tl = [];\n    for (var k in v) {\n        if (v[k].buffer) {\n            tl.push((v[k] = new v[k].constructor(v[k])).buffer);\n        }\n    }\n    return tl;\n};\n// use a worker to execute code\nvar wrkr = function (fns, init, id, cb) {\n    var _a;\n    if (!ch[id]) {\n        var fnStr = '', td_1 = {}, m = fns.length - 1;\n        for (var i = 0; i < m; ++i)\n            _a = wcln(fns[i], fnStr, td_1), fnStr = _a[0], td_1 = _a[1];\n        ch[id] = wcln(fns[m], fnStr, td_1);\n    }\n    var td = mrg({}, ch[id][1]);\n    return wk(ch[id][0] + ';onmessage=function(e){for(var k in e.data)self[k]=e.data[k];onmessage=' + init.toString() + '}', id, td, cbfs(td), cb);\n};\n// base async inflate fn\nvar bInflt = function () { return [u8, u16, u32, fleb, fdeb, clim, fl, fd, flrm, fdrm, rev, ec, hMap, max, bits, bits16, shft, slc, err, inflt, inflateSync, pbf, gu8]; };\nvar bDflt = function () { return [u8, u16, u32, fleb, fdeb, clim, revfl, revfd, flm, flt, fdm, fdt, rev, deo, et, hMap, wbits, wbits16, hTree, ln, lc, clen, wfblk, wblk, shft, slc, dflt, dopt, deflateSync, pbf]; };\n// gzip extra\nvar gze = function () { return [gzh, gzhl, wbytes, crc, crct]; };\n// gunzip extra\nvar guze = function () { return [gzs, gzl]; };\n// zlib extra\nvar zle = function () { return [zlh, wbytes, adler]; };\n// unzlib extra\nvar zule = function () { return [zlv]; };\n// post buf\nvar pbf = function (msg) { return postMessage(msg, [msg.buffer]); };\n// get u8\nvar gu8 = function (o) { return o && o.size && new u8(o.size); };\n// async helper\nvar cbify = function (dat, opts, fns, init, id, cb) {\n    var w = wrkr(fns, init, id, function (err, dat) {\n        w.terminate();\n        cb(err, dat);\n    });\n    w.postMessage([dat, opts], opts.consume ? [dat.buffer] : []);\n    return function () { w.terminate(); };\n};\n// auto stream\nvar astrm = function (strm) {\n    strm.ondata = function (dat, final) { return postMessage([dat, final], [dat.buffer]); };\n    return function (ev) { return strm.push(ev.data[0], ev.data[1]); };\n};\n// async stream attach\nvar astrmify = function (fns, strm, opts, init, id) {\n    var t;\n    var w = wrkr(fns, init, id, function (err, dat) {\n        if (err)\n            w.terminate(), strm.ondata.call(strm, err);\n        else {\n            if (dat[1])\n                w.terminate();\n            strm.ondata.call(strm, err, dat[0], dat[1]);\n        }\n    });\n    w.postMessage(opts);\n    strm.push = function (d, f) {\n        if (!strm.ondata)\n            err(5);\n        if (t)\n            strm.ondata(err(4, 0, 1), null, !!f);\n        w.postMessage([d, t = f], [d.buffer]);\n    };\n    strm.terminate = function () { w.terminate(); };\n};\n// read 2 bytes\nvar b2 = function (d, b) { return d[b] | (d[b + 1] << 8); };\n// read 4 bytes\nvar b4 = function (d, b) { return (d[b] | (d[b + 1] << 8) | (d[b + 2] << 16) | (d[b + 3] << 24)) >>> 0; };\nvar b8 = function (d, b) { return b4(d, b) + (b4(d, b + 4) * 4294967296); };\n// write bytes\nvar wbytes = function (d, b, v) {\n    for (; v; ++b)\n        d[b] = v, v >>>= 8;\n};\n// gzip header\nvar gzh = function (c, o) {\n    var fn = o.filename;\n    c[0] = 31, c[1] = 139, c[2] = 8, c[8] = o.level < 2 ? 4 : o.level == 9 ? 2 : 0, c[9] = 3; // assume Unix\n    if (o.mtime != 0)\n        wbytes(c, 4, Math.floor(new Date(o.mtime || Date.now()) / 1000));\n    if (fn) {\n        c[3] = 8;\n        for (var i = 0; i <= fn.length; ++i)\n            c[i + 10] = fn.charCodeAt(i);\n    }\n};\n// gzip footer: -8 to -4 = CRC, -4 to -0 is length\n// gzip start\nvar gzs = function (d) {\n    if (d[0] != 31 || d[1] != 139 || d[2] != 8)\n        err(6, 'invalid gzip data');\n    var flg = d[3];\n    var st = 10;\n    if (flg & 4)\n        st += d[10] | (d[11] << 8) + 2;\n    for (var zs = (flg >> 3 & 1) + (flg >> 4 & 1); zs > 0; zs -= !d[st++])\n        ;\n    return st + (flg & 2);\n};\n// gzip length\nvar gzl = function (d) {\n    var l = d.length;\n    return ((d[l - 4] | d[l - 3] << 8 | d[l - 2] << 16) | (d[l - 1] << 24)) >>> 0;\n};\n// gzip header length\nvar gzhl = function (o) { return 10 + ((o.filename && (o.filename.length + 1)) || 0); };\n// zlib header\nvar zlh = function (c, o) {\n    var lv = o.level, fl = lv == 0 ? 0 : lv < 6 ? 1 : lv == 9 ? 3 : 2;\n    c[0] = 120, c[1] = (fl << 6) | (fl ? (32 - 2 * fl) : 1);\n};\n// zlib valid\nvar zlv = function (d) {\n    if ((d[0] & 15) != 8 || (d[0] >>> 4) > 7 || ((d[0] << 8 | d[1]) % 31))\n        err(6, 'invalid zlib data');\n    if (d[1] & 32)\n        err(6, 'invalid zlib data: preset dictionaries not supported');\n};\nfunction AsyncCmpStrm(opts, cb) {\n    if (!cb && typeof opts == 'function')\n        cb = opts, opts = {};\n    this.ondata = cb;\n    return opts;\n}\n// zlib footer: -4 to -0 is Adler32\n/**\n * Streaming DEFLATE compression\n */\nvar Deflate = /*#__PURE__*/ (function () {\n    function Deflate(opts, cb) {\n        if (!cb && typeof opts == 'function')\n            cb = opts, opts = {};\n        this.ondata = cb;\n        this.o = opts || {};\n    }\n    Deflate.prototype.p = function (c, f) {\n        this.ondata(dopt(c, this.o, 0, 0, !f), f);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Deflate.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.d = final;\n        this.p(chunk, final || false);\n    };\n    return Deflate;\n}());\nexport { Deflate };\n/**\n * Asynchronous streaming DEFLATE compression\n */\nvar AsyncDeflate = /*#__PURE__*/ (function () {\n    function AsyncDeflate(opts, cb) {\n        astrmify([\n            bDflt,\n            function () { return [astrm, Deflate]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Deflate(ev.data);\n            onmessage = astrm(strm);\n        }, 6);\n    }\n    return AsyncDeflate;\n}());\nexport { AsyncDeflate };\nexport function deflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n    ], function (ev) { return pbf(deflateSync(ev.data[0], ev.data[1])); }, 0, cb);\n}\n/**\n * Compresses data with DEFLATE without any wrapper\n * @param data The data to compress\n * @param opts The compression options\n * @returns The deflated version of the data\n */\nexport function deflateSync(data, opts) {\n    return dopt(data, opts || {}, 0, 0);\n}\n/**\n * Streaming DEFLATE decompression\n */\nvar Inflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an inflation stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Inflate(cb) {\n        this.s = {};\n        this.p = new u8(0);\n        this.ondata = cb;\n    }\n    Inflate.prototype.e = function (c) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        var l = this.p.length;\n        var n = new u8(l + c.length);\n        n.set(this.p), n.set(c, l), this.p = n;\n    };\n    Inflate.prototype.c = function (final) {\n        this.d = this.s.i = final || false;\n        var bts = this.s.b;\n        var dt = inflt(this.p, this.o, this.s);\n        this.ondata(slc(dt, bts, this.s.b), this.d);\n        this.o = slc(dt, this.s.b - 32768), this.s.b = this.o.length;\n        this.p = slc(this.p, (this.s.p / 8) | 0), this.s.p &= 7;\n    };\n    /**\n     * Pushes a chunk to be inflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the final chunk\n     */\n    Inflate.prototype.push = function (chunk, final) {\n        this.e(chunk), this.c(final);\n    };\n    return Inflate;\n}());\nexport { Inflate };\n/**\n * Asynchronous streaming DEFLATE decompression\n */\nvar AsyncInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous inflation stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncInflate(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            function () { return [astrm, Inflate]; }\n        ], this, 0, function () {\n            var strm = new Inflate();\n            onmessage = astrm(strm);\n        }, 7);\n    }\n    return AsyncInflate;\n}());\nexport { AsyncInflate };\nexport function inflate(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt\n    ], function (ev) { return pbf(inflateSync(ev.data[0], gu8(ev.data[1]))); }, 1, cb);\n}\n/**\n * Expands DEFLATE data with no wrapper\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function inflateSync(data, out) {\n    return inflt(data, out);\n}\n// before you yell at me for not just using extends, my reason is that TS inheritance is hard to workerize.\n/**\n * Streaming GZIP compression\n */\nvar Gzip = /*#__PURE__*/ (function () {\n    function Gzip(opts, cb) {\n        this.c = crc();\n        this.l = 0;\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be GZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gzip.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Gzip.prototype.p = function (c, f) {\n        this.c.p(c);\n        this.l += c.length;\n        var raw = dopt(c, this.o, this.v && gzhl(this.o), f && 8, !f);\n        if (this.v)\n            gzh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 8, this.c.d()), wbytes(raw, raw.length - 4, this.l);\n        this.ondata(raw, f);\n    };\n    return Gzip;\n}());\nexport { Gzip };\n/**\n * Asynchronous streaming GZIP compression\n */\nvar AsyncGzip = /*#__PURE__*/ (function () {\n    function AsyncGzip(opts, cb) {\n        astrmify([\n            bDflt,\n            gze,\n            function () { return [astrm, Deflate, Gzip]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Gzip(ev.data);\n            onmessage = astrm(strm);\n        }, 8);\n    }\n    return AsyncGzip;\n}());\nexport { AsyncGzip };\nexport function gzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        gze,\n        function () { return [gzipSync]; }\n    ], function (ev) { return pbf(gzipSync(ev.data[0], ev.data[1])); }, 2, cb);\n}\n/**\n * Compresses data with GZIP\n * @param data The data to compress\n * @param opts The compression options\n * @returns The gzipped version of the data\n */\nexport function gzipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var c = crc(), l = data.length;\n    c.p(data);\n    var d = dopt(data, opts, gzhl(opts), 8), s = d.length;\n    return gzh(d, opts), wbytes(d, s - 8, c.d()), wbytes(d, s - 4, l), d;\n}\n/**\n * Streaming GZIP decompression\n */\nvar Gunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a GUNZIP stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Gunzip(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be GUNZIPped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Gunzip.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            var s = this.p.length > 3 ? gzs(this.p) : 4;\n            if (s >= this.p.length && !final)\n                return;\n            this.p = this.p.subarray(s), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 8)\n                err(6, 'invalid gzip data');\n            this.p = this.p.subarray(0, -8);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Gunzip;\n}());\nexport { Gunzip };\n/**\n * Asynchronous streaming GZIP decompression\n */\nvar AsyncGunzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous GUNZIP stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncGunzip(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            guze,\n            function () { return [astrm, Inflate, Gunzip]; }\n        ], this, 0, function () {\n            var strm = new Gunzip();\n            onmessage = astrm(strm);\n        }, 9);\n    }\n    return AsyncGunzip;\n}());\nexport { AsyncGunzip };\nexport function gunzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        guze,\n        function () { return [gunzipSync]; }\n    ], function (ev) { return pbf(gunzipSync(ev.data[0])); }, 3, cb);\n}\n/**\n * Expands GZIP data\n * @param data The data to decompress\n * @param out Where to write the data. GZIP already encodes the output size, so providing this doesn't save memory.\n * @returns The decompressed version of the data\n */\nexport function gunzipSync(data, out) {\n    return inflt(data.subarray(gzs(data), -8), out || new u8(gzl(data)));\n}\n/**\n * Streaming Zlib compression\n */\nvar Zlib = /*#__PURE__*/ (function () {\n    function Zlib(opts, cb) {\n        this.c = adler();\n        this.v = 1;\n        Deflate.call(this, opts, cb);\n    }\n    /**\n     * Pushes a chunk to be zlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Zlib.prototype.push = function (chunk, final) {\n        Deflate.prototype.push.call(this, chunk, final);\n    };\n    Zlib.prototype.p = function (c, f) {\n        this.c.p(c);\n        var raw = dopt(c, this.o, this.v && 2, f && 4, !f);\n        if (this.v)\n            zlh(raw, this.o), this.v = 0;\n        if (f)\n            wbytes(raw, raw.length - 4, this.c.d());\n        this.ondata(raw, f);\n    };\n    return Zlib;\n}());\nexport { Zlib };\n/**\n * Asynchronous streaming Zlib compression\n */\nvar AsyncZlib = /*#__PURE__*/ (function () {\n    function AsyncZlib(opts, cb) {\n        astrmify([\n            bDflt,\n            zle,\n            function () { return [astrm, Deflate, Zlib]; }\n        ], this, AsyncCmpStrm.call(this, opts, cb), function (ev) {\n            var strm = new Zlib(ev.data);\n            onmessage = astrm(strm);\n        }, 10);\n    }\n    return AsyncZlib;\n}());\nexport { AsyncZlib };\nexport function zlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bDflt,\n        zle,\n        function () { return [zlibSync]; }\n    ], function (ev) { return pbf(zlibSync(ev.data[0], ev.data[1])); }, 4, cb);\n}\n/**\n * Compress data with Zlib\n * @param data The data to compress\n * @param opts The compression options\n * @returns The zlib-compressed version of the data\n */\nexport function zlibSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var a = adler();\n    a.p(data);\n    var d = dopt(data, opts, 2, 4);\n    return zlh(d, opts), wbytes(d, d.length - 4, a.d()), d;\n}\n/**\n * Streaming Zlib decompression\n */\nvar Unzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates a Zlib decompression stream\n     * @param cb The callback to call whenever data is inflated\n     */\n    function Unzlib(cb) {\n        this.v = 1;\n        Inflate.call(this, cb);\n    }\n    /**\n     * Pushes a chunk to be unzlibbed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzlib.prototype.push = function (chunk, final) {\n        Inflate.prototype.e.call(this, chunk);\n        if (this.v) {\n            if (this.p.length < 2 && !final)\n                return;\n            this.p = this.p.subarray(2), this.v = 0;\n        }\n        if (final) {\n            if (this.p.length < 4)\n                err(6, 'invalid zlib data');\n            this.p = this.p.subarray(0, -4);\n        }\n        // necessary to prevent TS from using the closure value\n        // This allows for workerization to function correctly\n        Inflate.prototype.c.call(this, final);\n    };\n    return Unzlib;\n}());\nexport { Unzlib };\n/**\n * Asynchronous streaming Zlib decompression\n */\nvar AsyncUnzlib = /*#__PURE__*/ (function () {\n    /**\n     * Creates an asynchronous Zlib decompression stream\n     * @param cb The callback to call whenever data is deflated\n     */\n    function AsyncUnzlib(cb) {\n        this.ondata = cb;\n        astrmify([\n            bInflt,\n            zule,\n            function () { return [astrm, Inflate, Unzlib]; }\n        ], this, 0, function () {\n            var strm = new Unzlib();\n            onmessage = astrm(strm);\n        }, 11);\n    }\n    return AsyncUnzlib;\n}());\nexport { AsyncUnzlib };\nexport function unzlib(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return cbify(data, opts, [\n        bInflt,\n        zule,\n        function () { return [unzlibSync]; }\n    ], function (ev) { return pbf(unzlibSync(ev.data[0], gu8(ev.data[1]))); }, 5, cb);\n}\n/**\n * Expands Zlib data\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function unzlibSync(data, out) {\n    return inflt((zlv(data), data.subarray(2, -4)), out);\n}\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzip as compress, AsyncGzip as AsyncCompress };\n// Default algorithm for compression (used because having a known output size allows faster decompression)\nexport { gzipSync as compressSync, Gzip as Compress };\n/**\n * Streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar Decompress = /*#__PURE__*/ (function () {\n    /**\n     * Creates a decompression stream\n     * @param cb The callback to call whenever data is decompressed\n     */\n    function Decompress(cb) {\n        this.G = Gunzip;\n        this.I = Inflate;\n        this.Z = Unzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Decompress.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (!this.s) {\n            if (this.p && this.p.length) {\n                var n = new u8(this.p.length + chunk.length);\n                n.set(this.p), n.set(chunk, this.p.length);\n            }\n            else\n                this.p = chunk;\n            if (this.p.length > 2) {\n                var _this_1 = this;\n                var cb = function () { _this_1.ondata.apply(_this_1, arguments); };\n                this.s = (this.p[0] == 31 && this.p[1] == 139 && this.p[2] == 8)\n                    ? new this.G(cb)\n                    : ((this.p[0] & 15) != 8 || (this.p[0] >> 4) > 7 || ((this.p[0] << 8 | this.p[1]) % 31))\n                        ? new this.I(cb)\n                        : new this.Z(cb);\n                this.s.push(this.p, final);\n                this.p = null;\n            }\n        }\n        else\n            this.s.push(chunk, final);\n    };\n    return Decompress;\n}());\nexport { Decompress };\n/**\n * Asynchronous streaming GZIP, Zlib, or raw DEFLATE decompression\n */\nvar AsyncDecompress = /*#__PURE__*/ (function () {\n    /**\n   * Creates an asynchronous decompression stream\n   * @param cb The callback to call whenever data is decompressed\n   */\n    function AsyncDecompress(cb) {\n        this.G = AsyncGunzip;\n        this.I = AsyncInflate;\n        this.Z = AsyncUnzlib;\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be decompressed\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncDecompress.prototype.push = function (chunk, final) {\n        Decompress.prototype.push.call(this, chunk, final);\n    };\n    return AsyncDecompress;\n}());\nexport { AsyncDecompress };\nexport function decompress(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzip(data, opts, cb)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflate(data, opts, cb)\n            : unzlib(data, opts, cb);\n}\n/**\n * Expands compressed GZIP, Zlib, or raw DEFLATE data, automatically detecting the format\n * @param data The data to decompress\n * @param out Where to write the data. Saves memory if you know the decompressed size and provide an output buffer of that length.\n * @returns The decompressed version of the data\n */\nexport function decompressSync(data, out) {\n    return (data[0] == 31 && data[1] == 139 && data[2] == 8)\n        ? gunzipSync(data, out)\n        : ((data[0] & 15) != 8 || (data[0] >> 4) > 7 || ((data[0] << 8 | data[1]) % 31))\n            ? inflateSync(data, out)\n            : unzlibSync(data, out);\n}\n// flatten a directory structure\nvar fltn = function (d, p, t, o) {\n    for (var k in d) {\n        var val = d[k], n = p + k, op = o;\n        if (Array.isArray(val))\n            op = mrg(o, val[1]), val = val[0];\n        if (val instanceof u8)\n            t[n] = [val, op];\n        else {\n            t[n += '/'] = [new u8(0), op];\n            fltn(val, n, t, o);\n        }\n    }\n};\n// text encoder\nvar te = typeof TextEncoder != 'undefined' && /*#__PURE__*/ new TextEncoder();\n// text decoder\nvar td = typeof TextDecoder != 'undefined' && /*#__PURE__*/ new TextDecoder();\n// text decoder stream\nvar tds = 0;\ntry {\n    td.decode(et, { stream: true });\n    tds = 1;\n}\ncatch (e) { }\n// decode UTF8\nvar dutf8 = function (d) {\n    for (var r = '', i = 0;;) {\n        var c = d[i++];\n        var eb = (c > 127) + (c > 223) + (c > 239);\n        if (i + eb > d.length)\n            return [r, slc(d, i - 1)];\n        if (!eb)\n            r += String.fromCharCode(c);\n        else if (eb == 3) {\n            c = ((c & 15) << 18 | (d[i++] & 63) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63)) - 65536,\n                r += String.fromCharCode(55296 | (c >> 10), 56320 | (c & 1023));\n        }\n        else if (eb & 1)\n            r += String.fromCharCode((c & 31) << 6 | (d[i++] & 63));\n        else\n            r += String.fromCharCode((c & 15) << 12 | (d[i++] & 63) << 6 | (d[i++] & 63));\n    }\n};\n/**\n * Streaming UTF-8 decoding\n */\nvar DecodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is decoded\n     */\n    function DecodeUTF8(cb) {\n        this.ondata = cb;\n        if (tds)\n            this.t = new TextDecoder();\n        else\n            this.p = et;\n    }\n    /**\n     * Pushes a chunk to be decoded from UTF-8 binary\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    DecodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        final = !!final;\n        if (this.t) {\n            this.ondata(this.t.decode(chunk, { stream: true }), final);\n            if (final) {\n                if (this.t.decode().length)\n                    err(8);\n                this.t = null;\n            }\n            return;\n        }\n        if (!this.p)\n            err(4);\n        var dat = new u8(this.p.length + chunk.length);\n        dat.set(this.p);\n        dat.set(chunk, this.p.length);\n        var _a = dutf8(dat), ch = _a[0], np = _a[1];\n        if (final) {\n            if (np.length)\n                err(8);\n            this.p = null;\n        }\n        else\n            this.p = np;\n        this.ondata(ch, final);\n    };\n    return DecodeUTF8;\n}());\nexport { DecodeUTF8 };\n/**\n * Streaming UTF-8 encoding\n */\nvar EncodeUTF8 = /*#__PURE__*/ (function () {\n    /**\n     * Creates a UTF-8 decoding stream\n     * @param cb The callback to call whenever data is encoded\n     */\n    function EncodeUTF8(cb) {\n        this.ondata = cb;\n    }\n    /**\n     * Pushes a chunk to be encoded to UTF-8\n     * @param chunk The string data to push\n     * @param final Whether this is the last chunk\n     */\n    EncodeUTF8.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        if (this.d)\n            err(4);\n        this.ondata(strToU8(chunk), this.d = final || false);\n    };\n    return EncodeUTF8;\n}());\nexport { EncodeUTF8 };\n/**\n * Converts a string into a Uint8Array for use with compression/decompression methods\n * @param str The string to encode\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless decoding a binary string.\n * @returns The string encoded in UTF-8/Latin-1 binary\n */\nexport function strToU8(str, latin1) {\n    if (latin1) {\n        var ar_1 = new u8(str.length);\n        for (var i = 0; i < str.length; ++i)\n            ar_1[i] = str.charCodeAt(i);\n        return ar_1;\n    }\n    if (te)\n        return te.encode(str);\n    var l = str.length;\n    var ar = new u8(str.length + (str.length >> 1));\n    var ai = 0;\n    var w = function (v) { ar[ai++] = v; };\n    for (var i = 0; i < l; ++i) {\n        if (ai + 5 > ar.length) {\n            var n = new u8(ai + 8 + ((l - i) << 1));\n            n.set(ar);\n            ar = n;\n        }\n        var c = str.charCodeAt(i);\n        if (c < 128 || latin1)\n            w(c);\n        else if (c < 2048)\n            w(192 | (c >> 6)), w(128 | (c & 63));\n        else if (c > 55295 && c < 57344)\n            c = 65536 + (c & 1023 << 10) | (str.charCodeAt(++i) & 1023),\n                w(240 | (c >> 18)), w(128 | ((c >> 12) & 63)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n        else\n            w(224 | (c >> 12)), w(128 | ((c >> 6) & 63)), w(128 | (c & 63));\n    }\n    return slc(ar, 0, ai);\n}\n/**\n * Converts a Uint8Array to a string\n * @param dat The data to decode to string\n * @param latin1 Whether or not to interpret the data as Latin-1. This should\n *               not need to be true unless encoding to binary string.\n * @returns The original UTF-8/Latin-1 string\n */\nexport function strFromU8(dat, latin1) {\n    if (latin1) {\n        var r = '';\n        for (var i = 0; i < dat.length; i += 16384)\n            r += String.fromCharCode.apply(null, dat.subarray(i, i + 16384));\n        return r;\n    }\n    else if (td)\n        return td.decode(dat);\n    else {\n        var _a = dutf8(dat), out = _a[0], ext = _a[1];\n        if (ext.length)\n            err(8);\n        return out;\n    }\n}\n;\n// deflate bit flag\nvar dbf = function (l) { return l == 1 ? 3 : l < 6 ? 2 : l == 9 ? 1 : 0; };\n// skip local zip header\nvar slzh = function (d, b) { return b + 30 + b2(d, b + 26) + b2(d, b + 28); };\n// read zip header\nvar zh = function (d, b, z) {\n    var fnl = b2(d, b + 28), fn = strFromU8(d.subarray(b + 46, b + 46 + fnl), !(b2(d, b + 8) & 2048)), es = b + 46 + fnl, bs = b4(d, b + 20);\n    var _a = z && bs == 4294967295 ? z64e(d, es) : [bs, b4(d, b + 24), b4(d, b + 42)], sc = _a[0], su = _a[1], off = _a[2];\n    return [b2(d, b + 10), sc, su, fn, es + b2(d, b + 30) + b2(d, b + 32), off];\n};\n// read zip64 extra field\nvar z64e = function (d, b) {\n    for (; b2(d, b) != 1; b += 4 + b2(d, b + 2))\n        ;\n    return [b8(d, b + 12), b8(d, b + 4), b8(d, b + 20)];\n};\n// extra field length\nvar exfl = function (ex) {\n    var le = 0;\n    if (ex) {\n        for (var k in ex) {\n            var l = ex[k].length;\n            if (l > 65535)\n                err(9);\n            le += l + 4;\n        }\n    }\n    return le;\n};\n// write zip header\nvar wzh = function (d, b, f, fn, u, c, ce, co) {\n    var fl = fn.length, ex = f.extra, col = co && co.length;\n    var exl = exfl(ex);\n    wbytes(d, b, ce != null ? 0x2014B50 : 0x4034B50), b += 4;\n    if (ce != null)\n        d[b++] = 20, d[b++] = f.os;\n    d[b] = 20, b += 2; // spec compliance? what's that?\n    d[b++] = (f.flag << 1) | (c < 0 && 8), d[b++] = u && 8;\n    d[b++] = f.compression & 255, d[b++] = f.compression >> 8;\n    var dt = new Date(f.mtime == null ? Date.now() : f.mtime), y = dt.getFullYear() - 1980;\n    if (y < 0 || y > 119)\n        err(10);\n    wbytes(d, b, (y << 25) | ((dt.getMonth() + 1) << 21) | (dt.getDate() << 16) | (dt.getHours() << 11) | (dt.getMinutes() << 5) | (dt.getSeconds() >>> 1)), b += 4;\n    if (c != -1) {\n        wbytes(d, b, f.crc);\n        wbytes(d, b + 4, c < 0 ? -c - 2 : c);\n        wbytes(d, b + 8, f.size);\n    }\n    wbytes(d, b + 12, fl);\n    wbytes(d, b + 14, exl), b += 16;\n    if (ce != null) {\n        wbytes(d, b, col);\n        wbytes(d, b + 6, f.attrs);\n        wbytes(d, b + 10, ce), b += 14;\n    }\n    d.set(fn, b);\n    b += fl;\n    if (exl) {\n        for (var k in ex) {\n            var exf = ex[k], l = exf.length;\n            wbytes(d, b, +k);\n            wbytes(d, b + 2, l);\n            d.set(exf, b + 4), b += 4 + l;\n        }\n    }\n    if (col)\n        d.set(co, b), b += col;\n    return b;\n};\n// write zip footer (end of central directory)\nvar wzf = function (o, b, c, d, e) {\n    wbytes(o, b, 0x6054B50); // skip disk\n    wbytes(o, b + 8, c);\n    wbytes(o, b + 10, c);\n    wbytes(o, b + 12, d);\n    wbytes(o, b + 16, e);\n};\n/**\n * A pass-through stream to keep data uncompressed in a ZIP archive.\n */\nvar ZipPassThrough = /*#__PURE__*/ (function () {\n    /**\n     * Creates a pass-through stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     */\n    function ZipPassThrough(filename) {\n        this.filename = filename;\n        this.c = crc();\n        this.size = 0;\n        this.compression = 0;\n    }\n    /**\n     * Processes a chunk and pushes to the output stream. You can override this\n     * method in a subclass for custom behavior, but by default this passes\n     * the data through. You must call this.ondata(err, chunk, final) at some\n     * point in this method.\n     * @param chunk The chunk to process\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.process = function (chunk, final) {\n        this.ondata(null, chunk, final);\n    };\n    /**\n     * Pushes a chunk to be added. If you are subclassing this with a custom\n     * compression algorithm, note that you must push data from the source\n     * file only, pre-compression.\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipPassThrough.prototype.push = function (chunk, final) {\n        if (!this.ondata)\n            err(5);\n        this.c.p(chunk);\n        this.size += chunk.length;\n        if (final)\n            this.crc = this.c.d();\n        this.process(chunk, final || false);\n    };\n    return ZipPassThrough;\n}());\nexport { ZipPassThrough };\n// I don't extend because TypeScript extension adds 1kB of runtime bloat\n/**\n * Streaming DEFLATE compression for ZIP archives. Prefer using AsyncZipDeflate\n * for better performance\n */\nvar ZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function ZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new Deflate(opts, function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n    }\n    ZipDeflate.prototype.process = function (chunk, final) {\n        try {\n            this.d.push(chunk, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    ZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return ZipDeflate;\n}());\nexport { ZipDeflate };\n/**\n * Asynchronous streaming DEFLATE compression for ZIP archives\n */\nvar AsyncZipDeflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE stream that can be added to ZIP archives\n     * @param filename The filename to associate with this data stream\n     * @param opts The compression options\n     */\n    function AsyncZipDeflate(filename, opts) {\n        var _this_1 = this;\n        if (!opts)\n            opts = {};\n        ZipPassThrough.call(this, filename);\n        this.d = new AsyncDeflate(opts, function (err, dat, final) {\n            _this_1.ondata(err, dat, final);\n        });\n        this.compression = 8;\n        this.flag = dbf(opts.level);\n        this.terminate = this.d.terminate;\n    }\n    AsyncZipDeflate.prototype.process = function (chunk, final) {\n        this.d.push(chunk, final);\n    };\n    /**\n     * Pushes a chunk to be deflated\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    AsyncZipDeflate.prototype.push = function (chunk, final) {\n        ZipPassThrough.prototype.push.call(this, chunk, final);\n    };\n    return AsyncZipDeflate;\n}());\nexport { AsyncZipDeflate };\n// TODO: Better tree shaking\n/**\n * A zippable archive to which files can incrementally be added\n */\nvar Zip = /*#__PURE__*/ (function () {\n    /**\n     * Creates an empty ZIP archive to which files can be added\n     * @param cb The callback to call whenever data for the generated ZIP archive\n     *           is available\n     */\n    function Zip(cb) {\n        this.ondata = cb;\n        this.u = [];\n        this.d = 1;\n    }\n    /**\n     * Adds a file to the ZIP archive\n     * @param file The file stream to add\n     */\n    Zip.prototype.add = function (file) {\n        var _this_1 = this;\n        if (!this.ondata)\n            err(5);\n        // finishing or finished\n        if (this.d & 2)\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, false);\n        else {\n            var f = strToU8(file.filename), fl_1 = f.length;\n            var com = file.comment, o = com && strToU8(com);\n            var u = fl_1 != file.filename.length || (o && (com.length != o.length));\n            var hl_1 = fl_1 + exfl(file.extra) + 30;\n            if (fl_1 > 65535)\n                this.ondata(err(11, 0, 1), null, false);\n            var header = new u8(hl_1);\n            wzh(header, 0, file, f, u, -1);\n            var chks_1 = [header];\n            var pAll_1 = function () {\n                for (var _i = 0, chks_2 = chks_1; _i < chks_2.length; _i++) {\n                    var chk = chks_2[_i];\n                    _this_1.ondata(null, chk, false);\n                }\n                chks_1 = [];\n            };\n            var tr_1 = this.d;\n            this.d = 0;\n            var ind_1 = this.u.length;\n            var uf_1 = mrg(file, {\n                f: f,\n                u: u,\n                o: o,\n                t: function () {\n                    if (file.terminate)\n                        file.terminate();\n                },\n                r: function () {\n                    pAll_1();\n                    if (tr_1) {\n                        var nxt = _this_1.u[ind_1 + 1];\n                        if (nxt)\n                            nxt.r();\n                        else\n                            _this_1.d = 1;\n                    }\n                    tr_1 = 1;\n                }\n            });\n            var cl_1 = 0;\n            file.ondata = function (err, dat, final) {\n                if (err) {\n                    _this_1.ondata(err, dat, final);\n                    _this_1.terminate();\n                }\n                else {\n                    cl_1 += dat.length;\n                    chks_1.push(dat);\n                    if (final) {\n                        var dd = new u8(16);\n                        wbytes(dd, 0, 0x8074B50);\n                        wbytes(dd, 4, file.crc);\n                        wbytes(dd, 8, cl_1);\n                        wbytes(dd, 12, file.size);\n                        chks_1.push(dd);\n                        uf_1.c = cl_1, uf_1.b = hl_1 + cl_1 + 16, uf_1.crc = file.crc, uf_1.size = file.size;\n                        if (tr_1)\n                            uf_1.r();\n                        tr_1 = 1;\n                    }\n                    else if (tr_1)\n                        pAll_1();\n                }\n            };\n            this.u.push(uf_1);\n        }\n    };\n    /**\n     * Ends the process of adding files and prepares to emit the final chunks.\n     * This *must* be called after adding all desired files for the resulting\n     * ZIP file to work properly.\n     */\n    Zip.prototype.end = function () {\n        var _this_1 = this;\n        if (this.d & 2) {\n            this.ondata(err(4 + (this.d & 1) * 8, 0, 1), null, true);\n            return;\n        }\n        if (this.d)\n            this.e();\n        else\n            this.u.push({\n                r: function () {\n                    if (!(_this_1.d & 1))\n                        return;\n                    _this_1.u.splice(-1, 1);\n                    _this_1.e();\n                },\n                t: function () { }\n            });\n        this.d = 3;\n    };\n    Zip.prototype.e = function () {\n        var bt = 0, l = 0, tl = 0;\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            tl += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0);\n        }\n        var out = new u8(tl + 22);\n        for (var _b = 0, _c = this.u; _b < _c.length; _b++) {\n            var f = _c[_b];\n            wzh(out, bt, f, f.f, f.u, -f.c - 2, l, f.o);\n            bt += 46 + f.f.length + exfl(f.extra) + (f.o ? f.o.length : 0), l += f.b;\n        }\n        wzf(out, bt, this.u.length, tl, l);\n        this.ondata(null, out, true);\n        this.d = 2;\n    };\n    /**\n     * A method to terminate any internal workers used by the stream. Subsequent\n     * calls to add() will fail.\n     */\n    Zip.prototype.terminate = function () {\n        for (var _i = 0, _a = this.u; _i < _a.length; _i++) {\n            var f = _a[_i];\n            f.t();\n        }\n        this.d = 2;\n    };\n    return Zip;\n}());\nexport { Zip };\nexport function zip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var r = {};\n    fltn(data, '', r, opts);\n    var k = Object.keys(r);\n    var lft = k.length, o = 0, tot = 0;\n    var slft = lft, files = new Array(lft);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var cbf = function () {\n        var out = new u8(tot + 22), oe = o, cdl = tot - o;\n        tot = 0;\n        for (var i = 0; i < slft; ++i) {\n            var f = files[i];\n            try {\n                var l = f.c.length;\n                wzh(out, tot, f, f.f, f.u, l);\n                var badd = 30 + f.f.length + exfl(f.extra);\n                var loc = tot + badd;\n                out.set(f.c, loc);\n                wzh(out, o, f, f.f, f.u, l, tot, f.m), o += 16 + badd + (f.m ? f.m.length : 0), tot = loc + l;\n            }\n            catch (e) {\n                return cbd(e, null);\n            }\n        }\n        wzf(out, o, files.length, cdl, oe);\n        cbd(null, out);\n    };\n    if (!lft)\n        cbf();\n    var _loop_1 = function (i) {\n        var fn = k[i];\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var c = crc(), size = file.length;\n        c.p(file);\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        var compression = p.level == 0 ? 0 : 8;\n        var cbl = function (e, d) {\n            if (e) {\n                tAll();\n                cbd(e, null);\n            }\n            else {\n                var l = d.length;\n                files[i] = mrg(p, {\n                    size: size,\n                    crc: c.d(),\n                    c: d,\n                    f: f,\n                    m: m,\n                    u: s != fn.length || (m && (com.length != ms)),\n                    compression: compression\n                });\n                o += 30 + s + exl + l;\n                tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n                if (!--lft)\n                    cbf();\n            }\n        };\n        if (s > 65535)\n            cbl(err(11, 0, 1), null);\n        if (!compression)\n            cbl(null, file);\n        else if (size < 160000) {\n            try {\n                cbl(null, deflateSync(file, p));\n            }\n            catch (e) {\n                cbl(e, null);\n            }\n        }\n        else\n            term.push(deflate(file, p, cbl));\n    };\n    // Cannot use lft because it can decrease\n    for (var i = 0; i < slft; ++i) {\n        _loop_1(i);\n    }\n    return tAll;\n}\n/**\n * Synchronously creates a ZIP file. Prefer using `zip` for better performance\n * with more than one file.\n * @param data The directory structure for the ZIP archive\n * @param opts The main options, merged with per-file options\n * @returns The generated ZIP archive\n */\nexport function zipSync(data, opts) {\n    if (!opts)\n        opts = {};\n    var r = {};\n    var files = [];\n    fltn(data, '', r, opts);\n    var o = 0;\n    var tot = 0;\n    for (var fn in r) {\n        var _a = r[fn], file = _a[0], p = _a[1];\n        var compression = p.level == 0 ? 0 : 8;\n        var f = strToU8(fn), s = f.length;\n        var com = p.comment, m = com && strToU8(com), ms = m && m.length;\n        var exl = exfl(p.extra);\n        if (s > 65535)\n            err(11);\n        var d = compression ? deflateSync(file, p) : file, l = d.length;\n        var c = crc();\n        c.p(file);\n        files.push(mrg(p, {\n            size: file.length,\n            crc: c.d(),\n            c: d,\n            f: f,\n            m: m,\n            u: s != fn.length || (m && (com.length != ms)),\n            o: o,\n            compression: compression\n        }));\n        o += 30 + s + exl + l;\n        tot += 76 + 2 * (s + exl) + (ms || 0) + l;\n    }\n    var out = new u8(tot + 22), oe = o, cdl = tot - o;\n    for (var i = 0; i < files.length; ++i) {\n        var f = files[i];\n        wzh(out, f.o, f, f.f, f.u, f.c.length);\n        var badd = 30 + f.f.length + exfl(f.extra);\n        out.set(f.c, f.o + badd);\n        wzh(out, o, f, f.f, f.u, f.c.length, f.o, f.m), o += 16 + badd + (f.m ? f.m.length : 0);\n    }\n    wzf(out, o, files.length, cdl, oe);\n    return out;\n}\n/**\n * Streaming pass-through decompression for ZIP archives\n */\nvar UnzipPassThrough = /*#__PURE__*/ (function () {\n    function UnzipPassThrough() {\n    }\n    UnzipPassThrough.prototype.push = function (data, final) {\n        this.ondata(null, data, final);\n    };\n    UnzipPassThrough.compression = 0;\n    return UnzipPassThrough;\n}());\nexport { UnzipPassThrough };\n/**\n * Streaming DEFLATE decompression for ZIP archives. Prefer AsyncZipInflate for\n * better performance.\n */\nvar UnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function UnzipInflate() {\n        var _this_1 = this;\n        this.i = new Inflate(function (dat, final) {\n            _this_1.ondata(null, dat, final);\n        });\n    }\n    UnzipInflate.prototype.push = function (data, final) {\n        try {\n            this.i.push(data, final);\n        }\n        catch (e) {\n            this.ondata(e, null, final);\n        }\n    };\n    UnzipInflate.compression = 8;\n    return UnzipInflate;\n}());\nexport { UnzipInflate };\n/**\n * Asynchronous streaming DEFLATE decompression for ZIP archives\n */\nvar AsyncUnzipInflate = /*#__PURE__*/ (function () {\n    /**\n     * Creates a DEFLATE decompression that can be used in ZIP archives\n     */\n    function AsyncUnzipInflate(_, sz) {\n        var _this_1 = this;\n        if (sz < 320000) {\n            this.i = new Inflate(function (dat, final) {\n                _this_1.ondata(null, dat, final);\n            });\n        }\n        else {\n            this.i = new AsyncInflate(function (err, dat, final) {\n                _this_1.ondata(err, dat, final);\n            });\n            this.terminate = this.i.terminate;\n        }\n    }\n    AsyncUnzipInflate.prototype.push = function (data, final) {\n        if (this.i.terminate)\n            data = slc(data, 0);\n        this.i.push(data, final);\n    };\n    AsyncUnzipInflate.compression = 8;\n    return AsyncUnzipInflate;\n}());\nexport { AsyncUnzipInflate };\n/**\n * A ZIP archive decompression stream that emits files as they are discovered\n */\nvar Unzip = /*#__PURE__*/ (function () {\n    /**\n     * Creates a ZIP decompression stream\n     * @param cb The callback to call whenever a file in the ZIP archive is found\n     */\n    function Unzip(cb) {\n        this.onfile = cb;\n        this.k = [];\n        this.o = {\n            0: UnzipPassThrough\n        };\n        this.p = et;\n    }\n    /**\n     * Pushes a chunk to be unzipped\n     * @param chunk The chunk to push\n     * @param final Whether this is the last chunk\n     */\n    Unzip.prototype.push = function (chunk, final) {\n        var _this_1 = this;\n        if (!this.onfile)\n            err(5);\n        if (!this.p)\n            err(4);\n        if (this.c > 0) {\n            var len = Math.min(this.c, chunk.length);\n            var toAdd = chunk.subarray(0, len);\n            this.c -= len;\n            if (this.d)\n                this.d.push(toAdd, !this.c);\n            else\n                this.k[0].push(toAdd);\n            chunk = chunk.subarray(len);\n            if (chunk.length)\n                return this.push(chunk, final);\n        }\n        else {\n            var f = 0, i = 0, is = void 0, buf = void 0;\n            if (!this.p.length)\n                buf = chunk;\n            else if (!chunk.length)\n                buf = this.p;\n            else {\n                buf = new u8(this.p.length + chunk.length);\n                buf.set(this.p), buf.set(chunk, this.p.length);\n            }\n            var l = buf.length, oc = this.c, add = oc && this.d;\n            var _loop_2 = function () {\n                var _a;\n                var sig = b4(buf, i);\n                if (sig == 0x4034B50) {\n                    f = 1, is = i;\n                    this_1.d = null;\n                    this_1.c = 0;\n                    var bf = b2(buf, i + 6), cmp_1 = b2(buf, i + 8), u = bf & 2048, dd = bf & 8, fnl = b2(buf, i + 26), es = b2(buf, i + 28);\n                    if (l > i + 30 + fnl + es) {\n                        var chks_3 = [];\n                        this_1.k.unshift(chks_3);\n                        f = 2;\n                        var sc_1 = b4(buf, i + 18), su_1 = b4(buf, i + 22);\n                        var fn_1 = strFromU8(buf.subarray(i + 30, i += 30 + fnl), !u);\n                        if (sc_1 == 4294967295) {\n                            _a = dd ? [-2] : z64e(buf, i), sc_1 = _a[0], su_1 = _a[1];\n                        }\n                        else if (dd)\n                            sc_1 = -1;\n                        i += es;\n                        this_1.c = sc_1;\n                        var d_1;\n                        var file_1 = {\n                            name: fn_1,\n                            compression: cmp_1,\n                            start: function () {\n                                if (!file_1.ondata)\n                                    err(5);\n                                if (!sc_1)\n                                    file_1.ondata(null, et, true);\n                                else {\n                                    var ctr = _this_1.o[cmp_1];\n                                    if (!ctr)\n                                        file_1.ondata(err(14, 'unknown compression type ' + cmp_1, 1), null, false);\n                                    d_1 = sc_1 < 0 ? new ctr(fn_1) : new ctr(fn_1, sc_1, su_1);\n                                    d_1.ondata = function (err, dat, final) { file_1.ondata(err, dat, final); };\n                                    for (var _i = 0, chks_4 = chks_3; _i < chks_4.length; _i++) {\n                                        var dat = chks_4[_i];\n                                        d_1.push(dat, false);\n                                    }\n                                    if (_this_1.k[0] == chks_3 && _this_1.c)\n                                        _this_1.d = d_1;\n                                    else\n                                        d_1.push(et, true);\n                                }\n                            },\n                            terminate: function () {\n                                if (d_1 && d_1.terminate)\n                                    d_1.terminate();\n                            }\n                        };\n                        if (sc_1 >= 0)\n                            file_1.size = sc_1, file_1.originalSize = su_1;\n                        this_1.onfile(file_1);\n                    }\n                    return \"break\";\n                }\n                else if (oc) {\n                    if (sig == 0x8074B50) {\n                        is = i += 12 + (oc == -2 && 8), f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                    else if (sig == 0x2014B50) {\n                        is = i -= 4, f = 3, this_1.c = 0;\n                        return \"break\";\n                    }\n                }\n            };\n            var this_1 = this;\n            for (; i < l - 4; ++i) {\n                var state_1 = _loop_2();\n                if (state_1 === \"break\")\n                    break;\n            }\n            this.p = et;\n            if (oc < 0) {\n                var dat = f ? buf.subarray(0, is - 12 - (oc == -2 && 8) - (b4(buf, is - 16) == 0x8074B50 && 4)) : buf.subarray(0, i);\n                if (add)\n                    add.push(dat, !!f);\n                else\n                    this.k[+(f == 2)].push(dat);\n            }\n            if (f & 2)\n                return this.push(buf.subarray(i), final);\n            this.p = buf.subarray(i);\n        }\n        if (final) {\n            if (this.c)\n                err(13);\n            this.p = null;\n        }\n    };\n    /**\n     * Registers a decoder with the stream, allowing for files compressed with\n     * the compression type provided to be expanded correctly\n     * @param decoder The decoder constructor\n     */\n    Unzip.prototype.register = function (decoder) {\n        this.o[decoder.compression] = decoder;\n    };\n    return Unzip;\n}());\nexport { Unzip };\nvar mt = typeof queueMicrotask == 'function' ? queueMicrotask : typeof setTimeout == 'function' ? setTimeout : function (fn) { fn(); };\nexport function unzip(data, opts, cb) {\n    if (!cb)\n        cb = opts, opts = {};\n    if (typeof cb != 'function')\n        err(7);\n    var term = [];\n    var tAll = function () {\n        for (var i = 0; i < term.length; ++i)\n            term[i]();\n    };\n    var files = {};\n    var cbd = function (a, b) {\n        mt(function () { cb(a, b); });\n    };\n    mt(function () { cbd = cb; });\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558) {\n            cbd(err(13, 0, 1), null);\n            return tAll;\n        }\n    }\n    ;\n    var lft = b2(data, e + 8);\n    if (lft) {\n        var c = lft;\n        var o = b4(data, e + 16);\n        var z = o == 4294967295 || c == 65535;\n        if (z) {\n            var ze = b4(data, e - 12);\n            z = b4(data, ze) == 0x6064B50;\n            if (z) {\n                c = lft = b4(data, ze + 32);\n                o = b4(data, ze + 48);\n            }\n        }\n        var fltr = opts && opts.filter;\n        var _loop_3 = function (i) {\n            var _a = zh(data, o, z), c_1 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n            o = no;\n            var cbl = function (e, d) {\n                if (e) {\n                    tAll();\n                    cbd(e, null);\n                }\n                else {\n                    if (d)\n                        files[fn] = d;\n                    if (!--lft)\n                        cbd(null, files);\n                }\n            };\n            if (!fltr || fltr({\n                name: fn,\n                size: sc,\n                originalSize: su,\n                compression: c_1\n            })) {\n                if (!c_1)\n                    cbl(null, slc(data, b, b + sc));\n                else if (c_1 == 8) {\n                    var infl = data.subarray(b, b + sc);\n                    if (sc < 320000) {\n                        try {\n                            cbl(null, inflateSync(infl, new u8(su)));\n                        }\n                        catch (e) {\n                            cbl(e, null);\n                        }\n                    }\n                    else\n                        term.push(inflate(infl, { size: su }, cbl));\n                }\n                else\n                    cbl(err(14, 'unknown compression type ' + c_1, 1), null);\n            }\n            else\n                cbl(null, null);\n        };\n        for (var i = 0; i < c; ++i) {\n            _loop_3(i);\n        }\n    }\n    else\n        cbd(null, {});\n    return tAll;\n}\n/**\n * Synchronously decompresses a ZIP archive. Prefer using `unzip` for better\n * performance with more than one file.\n * @param data The raw compressed ZIP file\n * @param opts The ZIP extraction options\n * @returns The decompressed files\n */\nexport function unzipSync(data, opts) {\n    var files = {};\n    var e = data.length - 22;\n    for (; b4(data, e) != 0x6054B50; --e) {\n        if (!e || data.length - e > 65558)\n            err(13);\n    }\n    ;\n    var c = b2(data, e + 8);\n    if (!c)\n        return {};\n    var o = b4(data, e + 16);\n    var z = o == 4294967295 || c == 65535;\n    if (z) {\n        var ze = b4(data, e - 12);\n        z = b4(data, ze) == 0x6064B50;\n        if (z) {\n            c = b4(data, ze + 32);\n            o = b4(data, ze + 48);\n        }\n    }\n    var fltr = opts && opts.filter;\n    for (var i = 0; i < c; ++i) {\n        var _a = zh(data, o, z), c_2 = _a[0], sc = _a[1], su = _a[2], fn = _a[3], no = _a[4], off = _a[5], b = slzh(data, off);\n        o = no;\n        if (!fltr || fltr({\n            name: fn,\n            size: sc,\n            originalSize: su,\n            compression: c_2\n        })) {\n            if (!c_2)\n                files[fn] = slc(data, b, b + sc);\n            else if (c_2 == 8)\n                files[fn] = inflateSync(data.subarray(b, b + sc), new u8(su));\n            else\n                err(14, 'unknown compression type ' + c_2);\n        }\n    }\n    return files;\n}\n", "import { unzipSync, strFromU8 } from 'fflate'\r\n\r\n/**\r\n * Reads XLSX file in a browser.\r\n * @param  {(File|Blob|ArrayBuffer)} input - A `File` or an `ArrayBuffer`.\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\r\nexport default function unpackXlsxFile(input) {\r\n\tif (input instanceof File) {\r\n\t\treturn input.arrayBuffer().then(unpackXlsxArrayBuffer)\r\n\t}\r\n\tif (input instanceof Blob) {\r\n\t\treturn input.arrayBuffer().then(unpackXlsxArrayBuffer)\r\n\t}\r\n\treturn unpackXlsxArrayBuffer(input)\r\n}\r\n\r\n/**\r\n * Reads XLSX file in a browser from an `ArrayBuffer`.\r\n * @param  {ArrayBuffer} input\r\n * @return {Promise} Resolves to an object holding XLSX file entries.\r\n */\r\nfunction unpackXlsxArrayBuffer(arrayBuffer) {\r\n\tconst archive = new Uint8Array(arrayBuffer)\r\n\tconst contents = unzipSync(archive)\r\n\treturn Promise.resolve(getContents(contents))\r\n\t// return new Promise((resolve, reject) => {\r\n\t// \tunzip(archive, (error, contents) => {\r\n\t// \t\tif (error) {\r\n\t// \t\t\treturn reject(error)\r\n\t// \t\t}\r\n\t// \t\treturn resolve(getContents(contents))\r\n\t// \t})\r\n\t// })\r\n}\r\n\r\nfunction getContents(contents) {\r\n\tconst unzippedFiles = []\r\n\tfor (const key of Object.keys(contents)) {\r\n\t\tunzippedFiles[key] = strFromU8(contents[key])\r\n\t}\r\n\treturn unzippedFiles\r\n}", "export function findChild(node, tagName) {\r\n\tlet i = 0\r\n\twhile (i < node.childNodes.length) {\r\n\t\tconst childNode = node.childNodes[i]\r\n\t\t// `nodeType: 1` means \"Element\".\r\n\t\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\t\tif (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\r\n\t\t\treturn childNode\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}\r\n\r\nexport function findChildren(node, tagName) {\r\n\tconst results = []\r\n\tlet i = 0\r\n\twhile (i < node.childNodes.length) {\r\n\t\tconst childNode = node.childNodes[i]\r\n\t\t// `nodeType: 1` means \"Element\".\r\n\t\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\t\tif (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\r\n\t\t\tresults.push(childNode)\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n\treturn results\r\n}\r\n\r\nexport function forEach(node, tagName, func) {\r\n\t// if (typeof tagName === 'function') {\r\n\t// \tfunc = tagName\r\n\t// \ttagName = undefined\r\n\t// }\r\n\tlet i = 0\r\n\twhile (i < node.childNodes.length) {\r\n\t\tconst childNode = node.childNodes[i]\r\n\t\tif (tagName) {\r\n\t\t\t// `nodeType: 1` means \"Element\".\r\n\t\t\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\t\t\tif (childNode.nodeType === 1 && getTagName(childNode) === tagName) {\r\n\t\t\t\tfunc(childNode, i)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tfunc(childNode, i)\r\n\t\t}\r\n\t\ti++\r\n\t}\r\n}\r\n\r\nexport function map(node, tagName, func) {\r\n\tconst results = []\r\n\tforEach(node, tagName, (node, i) => {\r\n\t\tresults.push(func(node, i))\r\n\t})\r\n\treturn results\r\n}\r\n\r\nconst NAMESPACE_REG_EXP = /.+\\:/\r\nexport function getTagName(element) {\r\n\t// For some weird reason, if an element is declared as,\r\n\t// for example, `<x:sheets/>`, then its `.tagName` will be\r\n\t// \"x:sheets\" instead of just \"sheets\".\r\n\t// https://gitlab.com/catamphetamine/read-excel-file/-/issues/25\r\n\t// Its not clear how to tell it to ignore any namespaces\r\n\t// when getting `.tagName`, so just replacing anything\r\n\t// before a colon, if any.\r\n\treturn element.tagName.replace(NAMESPACE_REG_EXP, '')\r\n}\r\n\r\n// This function is only used for occasional debug messages.\r\nexport function getOuterXml(node) {\r\n\t// `nodeType: 1` means \"Element\".\r\n\t// https://www.w3schools.com/xml/prop_element_nodetype.asp\r\n\tif (node.nodeType !== 1) {\r\n\t\treturn node.textContent\r\n\t}\r\n\r\n  let xml = '<' + getTagName(node)\r\n\r\n  let j = 0\r\n  while (j < node.attributes.length) {\r\n    xml += ' ' + node.attributes[j].name + '=' + '\"' + node.attributes[j].value + '\"'\r\n    j++\r\n  }\r\n\r\n  xml += '>'\r\n\r\n  let i = 0\r\n  while (i < node.childNodes.length) {\r\n  \txml += getOuterXml(node.childNodes[i])\r\n    i++\r\n  }\r\n\r\n  xml += '</' + getTagName(node) + '>'\r\n\r\n  return xml\r\n}", "import { findChild, findChildren, forEach, map, getTagName } from './dom.js'\r\n\r\n// Returns an array of cells,\r\n// each element being an XML DOM element representing a cell.\r\nexport function getCells(document) {\r\n  const worksheet = document.documentElement\r\n  const sheetData = findChild(worksheet, 'sheetData')\r\n\r\n  const cells = []\r\n  forEach(sheetData, 'row', (row) => {\r\n    forEach(row, 'c', (cell) => {\r\n      cells.push(cell)\r\n    })\r\n  })\r\n  return cells\r\n}\r\n\r\nexport function getMergedCells(document) {\r\n  const worksheet = document.documentElement\r\n  const mergedCells = findChild(worksheet, 'mergeCells')\r\n  const mergedCellsInfo = []\r\n  if (mergedCells) {\r\n    forEach(mergedCells, 'mergeCell', (mergedCell) => {\r\n      mergedCellsInfo.push(mergedCell.getAttribute('ref'))\r\n    })\r\n  }\r\n  return mergedCellsInfo\r\n}\r\n\r\nexport function getCellValue(document, node) {\r\n  return findChild(node, 'v')\r\n}\r\n\r\nexport function getCellInlineStringValue(document, node) {\r\n  if (\r\n    node.firstChild &&\r\n    getTagName(node.firstChild) === 'is' &&\r\n    node.firstChild.firstChild &&\r\n    getTagName(node.firstChild.firstChild) === 't'\r\n  ) {\r\n    return node.firstChild.firstChild.textContent\r\n  }\r\n}\r\n\r\nexport function getDimensions(document) {\r\n  const worksheet = document.documentElement\r\n  const dimensions = findChild(worksheet, 'dimension')\r\n  if (dimensions) {\r\n    return dimensions.getAttribute('ref')\r\n  }\r\n}\r\n\r\nexport function getBaseStyles(document) {\r\n  const styleSheet = document.documentElement\r\n  const cellStyleXfs = findChild(styleSheet, 'cellStyleXfs')\r\n  if (cellStyleXfs) {\r\n    return findChildren(cellStyleXfs, 'xf')\r\n  }\r\n  return []\r\n}\r\n\r\nexport function getCellStyles(document) {\r\n  const styleSheet = document.documentElement\r\n  const cellXfs = findChild(styleSheet, 'cellXfs')\r\n  if (!cellXfs) {\r\n    return []\r\n  }\r\n  return findChildren(cellXfs, 'xf')\r\n}\r\n\r\nexport function getNumberFormats(document) {\r\n  const styleSheet = document.documentElement\r\n  let numberFormats = []\r\n  const numFmts = findChild(styleSheet, 'numFmts')\r\n  if (numFmts) {\r\n    return findChildren(numFmts, 'numFmt')\r\n  }\r\n  return []\r\n}\r\n\r\nexport function getSharedStrings(document) {\r\n\t// An `<si/>` element can contain a `<t/>` (simplest case) or a set of `<r/>` (\"rich formatting\") elements having `<t/>`.\r\n\t// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sharedstringitem?redirectedfrom=MSDN&view=openxml-2.8.1\r\n\t// http://www.datypic.com/sc/ooxml/e-ssml_si-1.html\r\n\r\n  const sst = document.documentElement\r\n  return map(sst, 'si', string => {\r\n    const t = findChild(string, 't')\r\n    if (t) {\r\n      return t.textContent\r\n    }\r\n    let value = ''\r\n    forEach(string, 'r', (r) => {\r\n      value += findChild(r, 't').textContent\r\n    })\r\n    return value\r\n  })\r\n}\r\n\r\nexport function getWorkbookProperties(document) {\r\n  const workbook = document.documentElement\r\n  return findChild(workbook, 'workbookPr')\r\n}\r\n\r\nexport function getRelationships(document) {\r\n  const relationships = document.documentElement\r\n  return findChildren(relationships, 'Relationship')\r\n}\r\n\r\nexport function getSheets(document) {\r\n  const workbook = document.documentElement\r\n  const sheets = findChild(workbook, 'sheets')\r\n  return findChildren(sheets, 'sheet')\r\n}", "import {\r\n  getWorkbookProperties,\r\n  getSheets\r\n} from '../xml/xlsx.js'\r\n\r\n// I guess `xl/workbook.xml` file should always be present inside the *.xlsx archive.\r\nexport default function parseProperties(content, xml) {\r\n  const book = xml.createDocument(content)\r\n\r\n  const properties = {};\r\n\r\n  // Read `<workbookPr/>` element to detect whether dates are 1900-based or 1904-based.\r\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\r\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/workbookPr.html\r\n\r\n  const workbookProperties = getWorkbookProperties(book)\r\n\r\n  if (workbookProperties && workbookProperties.getAttribute('date1904') === '1') {\r\n    properties.epoch1904 = true\r\n  }\r\n\r\n  // Get sheets info (indexes, names, if they're available).\r\n  // Example:\r\n  // <sheets>\r\n  //   <sheet\r\n  //     xmlns:ns=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships\"\r\n  //     name=\"Sheet1\"\r\n  //     sheetId=\"1\"\r\n  //     ns:id=\"rId3\"/>\r\n  // </sheets>\r\n  // http://www.datypic.com/sc/ooxml/e-ssml_sheet-1.html\r\n\r\n  properties.sheets = []\r\n\r\n  const addSheetInfo = (sheet) => {\r\n    if (sheet.getAttribute('name')) {\r\n      properties.sheets.push({\r\n        id: sheet.getAttribute('sheetId'),\r\n        name: sheet.getAttribute('name'),\r\n        relationId: sheet.getAttribute('r:id')\r\n      })\r\n    }\r\n  }\r\n\r\n  getSheets(book).forEach(addSheetInfo)\r\n\r\n  return properties;\r\n}", "import {\r\n  getRelationships\r\n} from '../xml/xlsx.js'\r\n\r\n/**\r\n * Returns sheet file paths.\r\n * Seems that the correct place to look for the `sheetId` -> `filename` mapping\r\n * is `xl/_rels/workbook.xml.rels` file.\r\n * https://github.com/tidyverse/readxl/issues/104\r\n * @param  {string} content — `xl/_rels/workbook.xml.rels` file contents.\r\n * @param  {object} xml\r\n * @return {object}\r\n */\r\nexport default function parseFilePaths(content, xml) {\r\n  // Example:\r\n  // <Relationships xmlns=\"http://schemas.openxmlformats.org/package/2006/relationships\">\r\n  //   ...\r\n  //   <Relationship\r\n  //     Id=\"rId3\"\r\n  //     Type=\"http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet\"\r\n  //     Target=\"worksheets/sheet1.xml\"/>\r\n  // </Relationships>\r\n  const document = xml.createDocument(content)\r\n\r\n  const filePaths = {\r\n    sheets: {},\r\n    sharedStrings: undefined,\r\n    styles: undefined\r\n  }\r\n\r\n  const addFilePathInfo = (relationship) => {\r\n    const filePath = relationship.getAttribute('Target')\r\n    const fileType = relationship.getAttribute('Type')\r\n    switch (fileType) {\r\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles':\r\n        filePaths.styles = getFilePath(filePath)\r\n        break\r\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/sharedStrings':\r\n        filePaths.sharedStrings = getFilePath(filePath)\r\n        break\r\n      case 'http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet':\r\n        filePaths.sheets[relationship.getAttribute('Id')] = getFilePath(filePath)\r\n        break\r\n    }\r\n  }\r\n\r\n  getRelationships(document).forEach(addFilePathInfo)\r\n\r\n  // Seems like \"sharedStrings.xml\" is not required to exist.\r\n  // For example, when the spreadsheet doesn't contain any strings.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/85\r\n  // if (!filePaths.sharedStrings) {\r\n  //   throw new Error('\"sharedStrings.xml\" file not found in the *.xlsx file')\r\n  // }\r\n\r\n  return filePaths\r\n}\r\n\r\nfunction getFilePath(path) {\r\n  // Normally, `path` is a relative path inside the ZIP archive,\r\n  // like \"worksheets/sheet1.xml\", or \"sharedStrings.xml\", or \"styles.xml\".\r\n  // There has been one weird case when file path was an absolute path,\r\n  // like \"/xl/worksheets/sheet1.xml\" (specifically for sheets):\r\n  // https://github.com/catamphetamine/read-excel-file/pull/95\r\n  // Other libraries (like `xlsx`) and software (like Google Docs)\r\n  // seem to support such absolute file paths, so this library does too.\r\n  if (path[0] === '/') {\r\n    return path.slice('/'.length)\r\n  }\r\n  // // Seems like a path could also be a URL.\r\n  // // http://officeopenxml.com/anatomyofOOXML-xlsx.php\r\n  // if (/^[a-z]+\\:\\/\\//.test(path)) {\r\n  //   return path\r\n  // }\r\n  return 'xl/' + path\r\n}", "import {\r\n  getBaseStyles,\r\n  getCellStyles,\r\n  getNumberFormats\r\n} from '../xml/xlsx.js'\r\n\r\n// http://officeopenxml.com/SSstyles.php\r\n// Returns an array of cell styles.\r\n// A cell style index is its ID.\r\nexport default function parseStyles(content, xml) {\r\n  if (!content) {\r\n    return {}\r\n  }\r\n\r\n  // https://social.msdn.microsoft.com/Forums/sqlserver/en-US/708978af-b598-45c4-a598-d3518a5a09f0/howwhen-is-cellstylexfs-vs-cellxfs-applied-to-a-cell?forum=os_binaryfile\r\n  // https://www.office-forums.com/threads/cellxfs-cellstylexfs.2163519/\r\n  const doc = xml.createDocument(content)\r\n\r\n  const baseStyles = getBaseStyles(doc)\r\n    .map(parseCellStyle)\r\n\r\n  const numberFormats = getNumberFormats(doc)\r\n    .map(parseNumberFormatStyle)\r\n    .reduce((formats, format) => {\r\n      // Format ID is a numeric index.\r\n      // There're some standard \"built-in\" formats (in Excel) up to about `100`.\r\n      formats[format.id] = format\r\n      return formats\r\n    }, [])\r\n\r\n  const getCellStyle = (xf) => {\r\n    if (xf.hasAttribute('xfId')) {\r\n      return {\r\n        ...baseStyles[xf.xfId],\r\n        ...parseCellStyle(xf, numberFormats)\r\n      }\r\n    }\r\n    return parseCellStyle(xf, numberFormats)\r\n  }\r\n\r\n  return getCellStyles(doc).map(getCellStyle)\r\n}\r\n\r\nfunction parseNumberFormatStyle(numFmt) {\r\n  return {\r\n    id: numFmt.getAttribute('numFmtId'),\r\n    template: numFmt.getAttribute('formatCode')\r\n  }\r\n}\r\n\r\n// http://www.datypic.com/sc/ooxml/e-ssml_xf-2.html\r\nfunction parseCellStyle(xf, numFmts) {\r\n  const style = {}\r\n  if (xf.hasAttribute('numFmtId')) {\r\n    const numberFormatId = xf.getAttribute('numFmtId')\r\n    // Built-in number formats don't have a `<numFmt/>` element in `styles.xml`.\r\n    // https://hexdocs.pm/xlsxir/number_styles.html\r\n    if (numFmts[numberFormatId]) {\r\n      style.numberFormat = numFmts[numberFormatId]\r\n    } else {\r\n      style.numberFormat = { id: numberFormatId }\r\n    }\r\n  }\r\n  return style\r\n}", "import {\r\n  getSharedStrings\r\n} from '../xml/xlsx.js'\r\n\r\nexport default function parseSharedStrings(content, xml) {\r\n  if (!content) {\r\n    return []\r\n  }\r\n  return getSharedStrings(xml.createDocument(content))\r\n}", "// Parses an Excel Date (\"serial\") into a corresponding javascript Date in UTC+0 timezone.\r\n// (with time equal to 00:00)\r\n//\r\n// https://www.pcworld.com/article/3063622/software/mastering-excel-date-time-serial-numbers-networkdays-datevalue-and-more.html\r\n// \"If you need to calculate dates in your spreadsheets,\r\n//  Excel uses its own unique system, which it calls Serial Numbers\".\r\n//\r\nexport default function parseExcelDate(excelSerialDate, options) {\r\n  // https://support.microsoft.com/en-gb/help/214330/differences-between-the-1900-and-the-1904-date-system-in-excel\r\n  if (options && options.epoch1904) {\r\n    excelSerialDate += 1462\r\n  }\r\n\r\n  // \"Excel serial date\" is just\r\n  // the count of days since `01/01/1900`\r\n  // (seems that it may be even fractional).\r\n  //\r\n  // The count of days elapsed\r\n  // since `01/01/1900` (Excel epoch)\r\n  // till `01/01/1970` (Unix epoch).\r\n  // Accounts for leap years\r\n  // (19 of them, yielding 19 extra days).\r\n  const daysBeforeUnixEpoch = 70 * 365 + 19\r\n\r\n  // An hour, approximately, because a minute\r\n  // may be longer than 60 seconds, due to \"leap seconds\".\r\n  //\r\n  // Still, Javascript `Date` (and UNIX time in general) intentionally\r\n  // drops the concept of \"leap seconds\" in order to make things simpler.\r\n  // So it's fine.\r\n  // https://stackoverflow.com/questions/53019726/where-are-the-leap-seconds-in-javascript\r\n  //\r\n  // \"The JavaScript Date object specifically adheres to the concept of Unix Time\r\n  //  (albeit with higher precision). This is part of the POSIX specification,\r\n  //  and thus is sometimes called \"POSIX Time\". It does not count leap seconds,\r\n  //  but rather assumes every day had exactly 86,400 seconds. You can read about\r\n  //  this in section 20.3.1.1 of the current ECMAScript specification, which states:\r\n  //\r\n  //  \"Time is measured in ECMAScript in milliseconds since 01 January, 1970 UTC.\r\n  //   In time values leap seconds are ignored. It is assumed that there are exactly\r\n  //   86,400,000 milliseconds per day.\"\r\n  //\r\n  //  The fact is, that the unpredictable nature of leap seconds makes them very\r\n  //  difficult to work with in APIs. One can't generally pass timestamps around\r\n  //  that need leap seconds tables to be interpreted correctly, and expect that\r\n  //  one system will interpret them the same as another. For example, while your\r\n  //  example timestamp 1483228826 is 2017-01-01T00:00:00Z on your system,\r\n  //  it would be interpreted as 2017-01-01T00:00:26Z on POSIX based systems,\r\n  //  or systems without leap second tables. So they aren't portable.\r\n  //  Even on systems that have full updated tables, there's no telling what those\r\n  //  tables will contain in the future (beyond the 6-month IERS announcement period),\r\n  //  so I can't produce a future timestamp without risk that it may eventually change.\r\n  //\r\n  //  To be clear - to support leap seconds in a programming language, the implementation\r\n  //  must go out of its way to do so, and must make tradeoffs that are not always acceptable.\r\n  //  Though there are exceptions, the general position is to not support them - not because\r\n  //  of any subversion or active countermeasures, but because supporting them properly is much,\r\n  //  much harder.\"\r\n  //\r\n  // https://en.wikipedia.org/wiki/Unix_time#Leap_seconds\r\n  // https://en.wikipedia.org/wiki/Leap_year\r\n  // https://en.wikipedia.org/wiki/Leap_second\r\n  //\r\n  const hour = 60 * 60 * 1000\r\n\r\n  return new Date(Math.round((excelSerialDate - daysBeforeUnixEpoch) * 24 * hour))\r\n}", "// XLSX does have \"d\" type for dates, but it's not commonly used.\r\n// Instead, it prefers using \"n\" type for storing dates as timestamps.\r\n//\r\n// Whether a numeric value is a number or a date timestamp, it sometimes could be\r\n// detected by looking at the value \"format\" and seeing if it's a date-specific one.\r\n// https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\r\n//\r\n// The list of generic numeric value \"formats\":\r\n// https://xlsxwriter.readthedocs.io/format.html#format-set-num-format\r\n//\r\nexport default function isDateTimestamp(styleId, styles, options) {\r\n  if (styleId) {\r\n    const style = styles[styleId]\r\n    if (!style) {\r\n      throw new Error(`Cell style not found: ${styleId}`)\r\n    }\r\n    if (!style.numberFormat) {\r\n      return false\r\n    }\r\n    if (\r\n      // Whether it's a \"number format\" that's conventionally used for storing date timestamps.\r\n      BUILT_IN_DATE_NUMBER_FORMAT_IDS.indexOf(Number(style.numberFormat.id)) >= 0 ||\r\n      // Whether it's a \"number format\" that uses a \"formatting template\"\r\n      // that the developer is certain is a date formatting template.\r\n      (options.dateFormat && style.numberFormat.template === options.dateFormat) ||\r\n      // Whether the \"smart formatting template\" feature is not disabled\r\n      // and it has detected that it's a date formatting template by looking at it.\r\n      (options.smartDateParser !== false && style.numberFormat.template && isDateTemplate(style.numberFormat.template))\r\n     ) {\r\n      return true\r\n    }\r\n  }\r\n}\r\n\r\n// https://hexdocs.pm/xlsxir/number_styles.html\r\nconst BUILT_IN_DATE_NUMBER_FORMAT_IDS = [14,15,16,17,18,19,20,21,22,27,30,36,45,46,47,50,57]\r\n\r\n// On some date formats, there's an \"[$-414]\" prefix.\r\n// I don't have any idea what that is.\r\n//\r\n// https://stackoverflow.com/questions/4730152/what-indicates-an-office-open-xml-cell-contains-a-date-time-value\r\n//\r\n// Examples:\r\n//\r\n// * 27 (built-in format) \"[$-404]e/m/d\"\r\n// * 164 (custom format) \"[$-414]mmmm\\ yyyy;@\"\r\n//\r\nconst DATE_FORMAT_WEIRD_PREFIX = /^\\[\\$-414\\]/\r\n\r\n// On some date formats, there's an \";@\" postfix.\r\n// I don't have any idea what that is.\r\n// Examples:\r\n//\r\n// * 164 (custom format) \"m/d/yyyy;@\"\r\n// * 164 (custom format) \"[$-414]mmmm\\ yyyy;@\"\r\n//\r\nconst DATE_FORMAT_WEIRD_POSTFIX = /;@$/\r\n\r\nfunction isDateTemplate(template) {\r\n  // Date format tokens could be in upper case or in lower case.\r\n  // There seems to be no single standard.\r\n  // So lowercase the template first.\r\n  template = template.toLowerCase()\r\n\r\n  // On some date formats, there's an \"[$-414]\" prefix.\r\n  // I don't have any idea what that is. Trim it.\r\n  template = template.replace(DATE_FORMAT_WEIRD_PREFIX, '')\r\n\r\n  // On some date formats, there's an \";@\" postfix.\r\n  // I don't have any idea what that is. Trim it.\r\n  template = template.replace(DATE_FORMAT_WEIRD_POSTFIX, '')\r\n\r\n  const tokens = template.split(/\\W+/)\r\n  for (const token of tokens) {\r\n    if (DATE_TEMPLATE_TOKENS.indexOf(token) < 0) {\r\n      return false\r\n    }\r\n  }\r\n  return true\r\n}\r\n\r\n// These tokens could be in upper case or in lower case.\r\n// There seems to be no single standard, so using lower case.\r\nconst DATE_TEMPLATE_TOKENS = [\r\n  // Seconds (min two digits). Example: \"05\".\r\n  'ss',\r\n  // Minutes (min two digits). Example: \"05\". Could also be \"Months\". Weird.\r\n  'mm',\r\n  // Hours. Example: \"1\".\r\n  'h',\r\n  // Hours (min two digits). Example: \"01\".\r\n  'hh',\r\n  // \"AM\" part of \"AM/PM\". Lowercased just in case.\r\n  'am',\r\n  // \"PM\" part of \"AM/PM\". Lowercased just in case.\r\n  'pm',\r\n  // Day. Example: \"1\"\r\n  'd',\r\n  // Day (min two digits). Example: \"01\"\r\n  'dd',\r\n  // Month (numeric). Example: \"1\".\r\n  'm',\r\n  // Month (numeric, min two digits). Example: \"01\". Could also be \"Minutes\". Weird.\r\n  'mm',\r\n  // Month (shortened month name). Example: \"Jan\".\r\n  'mmm',\r\n  // Month (full month name). Example: \"January\".\r\n  'mmmm',\r\n  // Two-digit year. Example: \"20\".\r\n  'yy',\r\n  // Full year. Example: \"2020\".\r\n  'yyyy',\r\n\r\n  // I don't have any idea what \"e\" means.\r\n  // It's used in \"built-in\" XLSX formats:\r\n  // * 27 '[$-404]e/m/d';\r\n  // * 36 '[$-404]e/m/d';\r\n  // * 50 '[$-404]e/m/d';\r\n  // * 57 '[$-404]e/m/d';\r\n  'e'\r\n];", "import parseDate from './parseDate.js'\r\nimport isDateTimestamp from './isDateTimestamp.js'\r\n\r\n// Parses a string `value` of a cell.\r\nexport default function parseCellValue(value, type, {\r\n  getInlineStringValue,\r\n  getInlineStringXml,\r\n  getStyleId,\r\n  styles,\r\n  values,\r\n  properties,\r\n  options\r\n}) {\r\n  if (!type) {\r\n    // Default cell type is \"n\" (numeric).\r\n    // http://www.datypic.com/sc/ooxml/t-ssml_CT_Cell.html\r\n    type = 'n'\r\n  }\r\n\r\n  // Available Excel cell types:\r\n  // https://github.com/SheetJS/sheetjs/blob/19620da30be2a7d7b9801938a0b9b1fd3c4c4b00/docbits/52_datatype.md\r\n  //\r\n  // Some other document (seems to be old):\r\n  // http://webapp.docx4java.org/OnlineDemo/ecma376/SpreadsheetML/ST_CellType.html\r\n  //\r\n  switch (type) {\r\n    // XLSX tends to store all strings as \"shared\" (indexed) ones\r\n    // using \"s\" cell type (for saving on strage space).\r\n    // \"str\" cell type is then generally only used for storing\r\n    // formula-pre-calculated cell values.\r\n    case 'str':\r\n      value = parseString(value, options)\r\n      break\r\n\r\n    // Sometimes, XLSX stores strings as \"inline\" strings rather than \"shared\" (indexed) ones.\r\n    // Perhaps the specification doesn't force it to use one or another.\r\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"inlineStr\"><is><t>Test 123</t></is></c></row></sheetData>`.\r\n    case 'inlineStr':\r\n      value = getInlineStringValue()\r\n      if (value === undefined) {\r\n        throw new Error(`Unsupported \"inline string\" cell value structure: ${getInlineStringXml()}`)\r\n      }\r\n      value = parseString(value, options)\r\n      break\r\n\r\n    // XLSX tends to store string values as \"shared\" (indexed) ones.\r\n    // \"Shared\" strings is a way for an Excel editor to reduce\r\n    // the file size by storing \"commonly used\" strings in a dictionary\r\n    // and then referring to such strings by their index in that dictionary.\r\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"s\"><v>0</v></c></row></sheetData>`.\r\n    case 's':\r\n      // If a cell has no value then there's no `<c/>` element for it.\r\n      // If a `<c/>` element exists then it's not empty.\r\n      // The `<v/>`alue is a key in the \"shared strings\" dictionary of the\r\n      // XLSX file, so look it up in the `values` dictionary by the numeric key.\r\n      const sharedStringIndex = Number(value)\r\n      if (isNaN(sharedStringIndex)) {\r\n        throw new Error(`Invalid \"shared\" string index: ${value}`)\r\n      }\r\n      if (sharedStringIndex >= values.length) {\r\n        throw new Error(`An out-of-bounds \"shared\" string index: ${value}`)\r\n      }\r\n      value = values[sharedStringIndex]\r\n      value = parseString(value, options)\r\n      break\r\n\r\n    // Boolean (TRUE/FALSE) values are stored as either \"1\" or \"0\"\r\n    // in cells of type \"b\".\r\n    case 'b':\r\n      if (value === '1') {\r\n        value = true\r\n      } else if (value === '0') {\r\n        value = false\r\n      } else {\r\n        throw new Error(`Unsupported \"boolean\" cell value: ${value}`)\r\n      }\r\n      break\r\n\r\n    // XLSX specification seems to support cells of type \"z\":\r\n    // blank \"stub\" cells that should be ignored by data processing utilities.\r\n    case 'z':\r\n      value = undefined\r\n      break\r\n\r\n    // XLSX specification also defines cells of type \"e\" containing a numeric \"error\" code.\r\n    // It's not clear what that means though.\r\n    // They also wrote: \"and `w` property stores its common name\".\r\n    // It's unclear what they meant by that.\r\n    case 'e':\r\n      value = decodeError(value)\r\n      break\r\n\r\n    // XLSX supports date cells of type \"d\", though seems like it (almost?) never\r\n    // uses it for storing dates, preferring \"n\" numeric timestamp cells instead.\r\n    // The value of a \"d\" cell is supposedly a string in \"ISO 8601\" format.\r\n    // I haven't seen an XLSX file having such cells.\r\n    // Example: `<sheetData><row r=\"1\"><c r=\"A1\" s=\"1\" t=\"d\"><v>2021-06-10T00:47:45.700Z</v></c></row></sheetData>`.\r\n    case 'd':\r\n      if (value === undefined) {\r\n        break\r\n      }\r\n      const parsedDate = new Date(value)\r\n      if (isNaN(parsedDate.valueOf())) {\r\n        throw new Error(`Unsupported \"date\" cell value: ${value}`)\r\n      }\r\n      value = parsedDate\r\n      break\r\n\r\n    // Numeric cells have type \"n\".\r\n    case 'n':\r\n      if (value === undefined) {\r\n        break\r\n      }\r\n      const isDateTimestampNumber = isDateTimestamp(getStyleId(), styles, options)\r\n      // XLSX does have \"d\" type for dates, but it's not commonly used.\r\n      // Instead, it prefers using \"n\" type for storing dates as timestamps.\r\n      if (isDateTimestampNumber) {\r\n        // Parse the number from string.\r\n        value = parseNumberDefault(value)\r\n        // Parse the number as a date timestamp.\r\n        value = parseDate(value, properties)\r\n      } else {\r\n        // Parse the number from string.\r\n        // Supports custom parsing function to work around javascript number encoding precision issues.\r\n        // https://gitlab.com/catamphetamine/read-excel-file/-/issues/85\r\n        value = (options.parseNumber || parseNumberDefault)(value)\r\n      }\r\n      break\r\n\r\n    default:\r\n      throw new TypeError(`Cell type not supported: ${type}`)\r\n  }\r\n\r\n  // Convert empty values to `null`.\r\n  if (value === undefined) {\r\n    value = null\r\n  }\r\n\r\n  return value\r\n}\r\n\r\n// Decodes numeric error code to a string code.\r\n// https://github.com/SheetJS/sheetjs/blob/19620da30be2a7d7b9801938a0b9b1fd3c4c4b00/docbits/52_datatype.md\r\nfunction decodeError(errorCode) {\r\n  // While the error values are determined by the application,\r\n  // the following are some example error values that could be used:\r\n  switch (errorCode) {\r\n    case 0x00:\r\n      return '#NULL!'\r\n    case 0x07:\r\n      return '#DIV/0!'\r\n    case 0x0F:\r\n      return '#VALUE!'\r\n    case 0x17:\r\n      return '#REF!'\r\n    case 0x1D:\r\n      return '#NAME?'\r\n    case 0x24:\r\n      return '#NUM!'\r\n    case 0x2A:\r\n      return '#N/A'\r\n    case 0x2B:\r\n      return '#GETTING_DATA'\r\n    default:\r\n      // Such error code doesn't exist. I made it up.\r\n      return `#ERROR_${errorCode}`\r\n  }\r\n}\r\n\r\nfunction parseString(value, options) {\r\n  // In some weird cases, a developer might want to disable\r\n  // the automatic trimming of all strings.\r\n  // For example, leading spaces might express a tree-like hierarchy.\r\n  // https://github.com/catamphetamine/read-excel-file/pull/106#issuecomment-1136062917\r\n  if (options.trim !== false) {\r\n    value = value.trim()\r\n  }\r\n  if (value === '') {\r\n    value = undefined\r\n  }\r\n  return value\r\n}\r\n\r\n// Parses a number from string.\r\n// Throws an error if the number couldn't be parsed.\r\n// When parsing floating-point number, is affected by\r\n// the javascript number encoding precision issues:\r\n// https://www.youtube.com/watch?v=2gIxbTn7GSc\r\n// https://www.avioconsulting.com/blog/overcoming-javascript-numeric-precision-issues\r\nfunction parseNumberDefault(stringifiedNumber) {\r\n  const parsedNumber = Number(stringifiedNumber)\r\n  if (isNaN(parsedNumber)) {\r\n    throw new Error(`Invalid \"numeric\" cell value: ${stringifiedNumber}`)\r\n  }\r\n  return parsedNumber\r\n}", "// Maps \"A1\"-like coordinates to `{ row, column }` numeric coordinates.\r\nconst LETTERS = [\"\", \"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"]\r\n\r\nexport function calculateDimensions (cells) {\r\n  const comparator = (a, b) => a - b\r\n  const allRows = cells.map(cell => cell.row).sort(comparator)\r\n  const allCols = cells.map(cell => cell.column).sort(comparator)\r\n  const minRow = allRows[0]\r\n  const maxRow = allRows[allRows.length - 1]\r\n  const minCol = allCols[0]\r\n  const maxCol = allCols[allCols.length - 1]\r\n\r\n  return [\r\n    { row: minRow, column: minCol },\r\n    { row: maxRow, column: maxCol }\r\n  ]\r\n}\r\n\r\n// Converts a letter coordinate to a digit coordinate.\r\n// Examples: \"A\" -> 1, \"B\" -> 2, \"Z\" -> 26, \"AA\" -> 27, etc.\r\nfunction columnLettersToNumber(columnLetters) {\r\n  // `for ... of ...` would require Babel polyfill for iterating a string.\r\n  let n = 0\r\n  let i = 0\r\n  while (i < columnLetters.length) {\r\n    n *= 26\r\n    n += LETTERS.indexOf(columnLetters[i])\r\n    i++\r\n  }\r\n  return n\r\n}\r\n\r\nexport function parseCellCoordinates(coords) {\r\n  // Coordinate examples: \"AA2091\", \"R988\", \"B1\".\r\n  coords = coords.split(/(\\d+)/)\r\n  return [\r\n    // Row.\r\n    parseInt(coords[1]),\r\n    // Column.\r\n    columnLettersToNumber(coords[0].trim())\r\n  ]\r\n}", "import parseCellValue from './parseCellValue.js'\r\n\r\nimport {\r\n  parseCellCoordinates\r\n} from './coordinates.js'\r\n\r\nimport {\r\n  getCellValue,\r\n  getCellInlineStringValue\r\n} from '../xml/xlsx.js'\r\n\r\nimport {\r\n  getOuterXml\r\n} from '../xml/dom.js'\r\n\r\n// Example of a `<c/>`ell element:\r\n//\r\n// <c>\r\n//    <f>string</f> — formula.\r\n//    <v>string</v> — formula pre-computed value.\r\n//    <is>\r\n//       <t>string</t> — an `inlineStr` string (rather than a \"common string\" from a dictionary).\r\n//       <r>\r\n//          <rPr>\r\n//            ...\r\n//          </rPr>\r\n//          <t>string</t>\r\n//       </r>\r\n//       <rPh sb=\"1\" eb=\"1\">\r\n//          <t>string</t>\r\n//       </rPh>\r\n//       <phoneticPr fontId=\"1\"/>\r\n//    </is>\r\n//    <extLst>\r\n//       <ext>\r\n//          <!--any element-->\r\n//       </ext>\r\n//    </extLst>\r\n// </c>\r\n//\r\nexport default function parseCell(node, sheet, xml, values, styles, properties, options) {\r\n  const coords = parseCellCoordinates(node.getAttribute('r'))\r\n\r\n  const valueElement = getCellValue(sheet, node)\r\n\r\n  // For `xpath`, `value` can be `undefined` while for native `DOMParser` it's `null`.\r\n  // So using `value && ...` instead of `if (value !== undefined) { ... }` here\r\n  // for uniform compatibility with both `xpath` and native `DOMParser`.\r\n  let value = valueElement && valueElement.textContent\r\n\r\n  let type\r\n  if (node.hasAttribute('t')) {\r\n    type = node.getAttribute('t')\r\n  }\r\n\r\n  return {\r\n    row: coords[0],\r\n    column: coords[1],\r\n    value: parseCellValue(value, type, {\r\n      getInlineStringValue: () => getCellInlineStringValue(sheet, node),\r\n      getInlineStringXml: () => getOuterXml(node),\r\n      getStyleId: () => node.getAttribute('s'),\r\n      styles,\r\n      values,\r\n      properties,\r\n      options\r\n    })\r\n  }\r\n}", "import parseCell from './parseCell.js'\r\n\r\nimport {\r\n  getCells,\r\n  getMergedCells\r\n} from '../xml/xlsx.js'\r\n\r\nexport default function parseCells(sheet, xml, values, styles, properties, options) {\r\n  const cells = getCells(sheet)\r\n\r\n  if (cells.length === 0) {\r\n    return []\r\n  }\r\n\r\n  // const mergedCells = getMergedCells(sheet)\r\n  // for (const mergedCell of mergedCells) {\r\n  //   const [from, to] = mergedCell.split(':').map(parseCellCoordinates)\r\n  //   console.log('Merged Cell.', 'From:', from, 'To:', to)\r\n  // }\r\n\r\n  return cells.map((node) => {\r\n    return parseCell(node, sheet, xml, values, styles, properties, options)\r\n  })\r\n}", "import {\r\n  parseCellCoordinates\r\n} from './coordinates.js'\r\n\r\nimport {\r\n  getDimensions\r\n} from '../xml/xlsx.js'\r\n\r\n// `dimensions` defines the spreadsheet area containing all non-empty cells.\r\n// https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\r\nexport default function parseDimensions(sheet) {\r\n  let dimensions = getDimensions(sheet)\r\n  if (dimensions) {\r\n    dimensions = dimensions.split(':').map(parseCellCoordinates).map(([row, column]) => ({\r\n      row,\r\n      column\r\n    }))\r\n    // Sometimes there can be just a single cell as a spreadsheet's \"dimensions\".\r\n    // For example, the default \"dimensions\" in Apache POI library is \"A1\",\r\n    // meaning that only the first cell in the spreadsheet is used.\r\n    //\r\n    // A quote from Apache POI library:\r\n    // \"Single cell ranges are formatted like single cell references (e.g. 'A1' instead of 'A1:A1').\"\r\n    //\r\n    if (dimensions.length === 1) {\r\n      dimensions = [dimensions[0], dimensions[0]]\r\n    }\r\n    return dimensions\r\n  }\r\n}\r\n\r\n", "import parseCells from './parseCells.js'\r\nimport parseDimensions from './parseDimensions.js'\r\n\r\nimport { calculateDimensions } from './coordinates.js'\r\n\r\nexport default function parseSheet(content, xml, values, styles, properties, options) {\r\n  const sheet = xml.createDocument(content)\r\n\r\n  const cells = parseCells(sheet, xml, values, styles, properties, options)\r\n\r\n  // `dimensions` defines the spreadsheet area containing all non-empty cells.\r\n  // https://docs.microsoft.com/en-us/dotnet/api/documentformat.openxml.spreadsheet.sheetdimension?view=openxml-2.8.1\r\n  const dimensions = parseDimensions(sheet) || calculateDimensions(cells)\r\n\r\n  return { cells, dimensions }\r\n}", "export default function dropEmptyRows(data, {\r\n  rowIndexMap,\r\n  accessor = _ => _,\r\n  onlyTrimAtTheEnd\r\n} = {}) {\r\n  // Drop empty rows.\r\n  let i = data.length - 1\r\n  while (i >= 0) {\r\n    // Check if the row is empty.\r\n    let empty = true\r\n    for (const cell of data[i]) {\r\n      if (accessor(cell) !== null) {\r\n        empty = false\r\n        break\r\n      }\r\n    }\r\n    // Remove the empty row.\r\n    if (empty) {\r\n      data.splice(i, 1)\r\n      if (rowIndexMap) {\r\n        rowIndexMap.splice(i, 1)\r\n      }\r\n    } else if (onlyTrimAtTheEnd) {\r\n      break\r\n    }\r\n    i--\r\n  }\r\n  return data\r\n}", "export default function dropEmptyColumns(data, {\r\n  accessor = _ => _,\r\n  onlyTrimAtTheEnd\r\n} = {}) {\r\n  let i = data[0].length - 1\r\n  while (i >= 0) {\r\n    let empty = true\r\n    for (const row of data) {\r\n      if (accessor(row[i]) !== null) {\r\n        empty = false\r\n        break\r\n      }\r\n    }\r\n    if (empty) {\r\n      let j = 0;\r\n      while (j < data.length) {\r\n        data[j].splice(i, 1)\r\n        j++\r\n      }\r\n    } else if (onlyTrimAtTheEnd) {\r\n      break\r\n    }\r\n    i--\r\n  }\r\n  return data\r\n}", "import dropEmptyRows from './dropEmptyRows.js'\r\nimport dropEmptyColumns from './dropEmptyColumns.js'\r\n\r\nexport default function getData(sheet, options) {\r\n  const { dimensions, cells } = sheet\r\n\r\n  // If the sheet is empty.\r\n  if (cells.length === 0) {\r\n    return []\r\n  }\r\n\r\n  const [leftTop, rightBottom] = dimensions\r\n\r\n  // Don't discard empty rows or columns at the start.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/102\r\n  // const colsCount = (rightBottom.column - leftTop.column) + 1\r\n  // const rowsCount = (rightBottom.row - leftTop.row) + 1\r\n\r\n  const colsCount = rightBottom.column\r\n  const rowsCount = rightBottom.row\r\n\r\n  // Initialize spreadsheet data structure.\r\n  let data = new Array(rowsCount)\r\n  let i = 0\r\n  while (i < rowsCount) {\r\n    data[i] = new Array(colsCount)\r\n    let j = 0\r\n    while (j < colsCount) {\r\n      data[i][j] = null\r\n      j++\r\n    }\r\n    i++\r\n  }\r\n\r\n  // Fill in spreadsheet `data`.\r\n  // (this code implies that `cells` aren't necessarily sorted by row and column:\r\n  //  maybe that's not correct, this piece code was initially copy-pasted\r\n  //  from some other library that used `XPath`)\r\n  for (const cell of cells) {\r\n    // Don't discard empty rows or columns at the start.\r\n    // https://github.com/catamphetamine/read-excel-file/issues/102\r\n    // const rowIndex = cell.row - leftTop.row\r\n    // const columnIndex = cell.column - leftTop.column\r\n    const rowIndex = cell.row - 1\r\n    const columnIndex = cell.column - 1\r\n    // Ignore the data in the cell if it's outside of the spreadsheet's \"dimensions\".\r\n    if (columnIndex < colsCount && rowIndex < rowsCount) {\r\n      data[rowIndex][columnIndex] = cell.value\r\n    }\r\n  }\r\n\r\n  // Fill in the row map.\r\n  const { rowMap: rowIndexMap } = options\r\n  if (rowIndexMap) {\r\n    let i = 0\r\n    while (i < data.length) {\r\n      rowIndexMap[i] = i\r\n      i++\r\n    }\r\n  }\r\n\r\n  // Drop empty columns or rows.\r\n  data = dropEmptyRows(\r\n    dropEmptyColumns(data, { onlyTrimAtTheEnd: true }),\r\n    { onlyTrimAtTheEnd: true, rowIndexMap }\r\n  )\r\n\r\n  // Optionally transform data before applying `schema`.\r\n  if (options.transformData) {\r\n    data = options.transformData(data)\r\n    // data = options.transformData(data, {\r\n    //   dropEmptyRowsAndColumns(data) {\r\n    //     return dropEmptyRows(dropEmptyColumns(data), { rowIndexMap })\r\n    //   }\r\n    // })\r\n  }\r\n\r\n  return data\r\n}", "import parseProperties from './parseProperties.js'\r\nimport parseFilePaths from './parseFilePaths.js'\r\nimport parseStyles from './parseStyles.js'\r\nimport parseSharedStrings from './parseSharedStrings.js'\r\nimport parseSheet from './parseSheet.js'\r\nimport getData from './getData.js'\r\n\r\n// For an introduction in reading `*.xlsx` files see \"The minimum viable XLSX reader\":\r\n// https://www.brendanlong.com/the-minimum-viable-xlsx-reader.html\r\n\r\n/**\r\n * Reads an (unzipped) XLSX file structure into a 2D array of cells.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @param  {number?} options.sheet - Workbook sheet id (`1` by default).\r\n * @param  {string?} options.dateFormat - Date format, e.g. \"mm/dd/yyyy\". Values having this format template set will be parsed as dates.\r\n * @param  {object} contents - A list of XML files inside XLSX file (which is a zipped directory).\r\n * @return {object} An object of shape `{ data, cells, properties }`. `data: string[][]` is an array of rows, each row being an array of cell values. `cells: string[][]` is an array of rows, each row being an array of cells. `properties: object` is the spreadsheet properties (e.g. whether date epoch is 1904 instead of 1900).\r\n */\r\nexport default function readXlsx(contents, xml, options = {}) {\r\n  if (!options.sheet) {\r\n    options = {\r\n      sheet: 1,\r\n      ...options\r\n    }\r\n  }\r\n\r\n  const getXmlFileContent = (filePath) => {\r\n    if (!contents[filePath]) {\r\n      throw new Error(`\"${filePath}\" file not found inside the *.xlsx file zip archive`)\r\n    }\r\n    return contents[filePath]\r\n  }\r\n\r\n  // Some Excel editors don't want to use standard naming scheme for sheet files.\r\n  // https://github.com/tidyverse/readxl/issues/104\r\n  const filePaths = parseFilePaths(getXmlFileContent('xl/_rels/workbook.xml.rels'), xml)\r\n\r\n  // Default file path for \"shared strings\": \"xl/sharedStrings.xml\".\r\n  const values = filePaths.sharedStrings\r\n    ? parseSharedStrings(getXmlFileContent(filePaths.sharedStrings), xml)\r\n    : []\r\n\r\n  // Default file path for \"styles\": \"xl/styles.xml\".\r\n  const styles = filePaths.styles\r\n    ? parseStyles(getXmlFileContent(filePaths.styles), xml)\r\n    : {}\r\n\r\n  const properties = parseProperties(getXmlFileContent('xl/workbook.xml'), xml)\r\n\r\n  // A feature for getting the list of sheets in an Excel file.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/14\r\n  if (options.getSheets) {\r\n    return properties.sheets.map(({ name }) => ({\r\n      name\r\n    }))\r\n  }\r\n\r\n  // Find the sheet by name, or take the first one.\r\n  const sheetId = getSheetId(options.sheet, properties.sheets)\r\n\r\n  // If the sheet wasn't found then throw an error.\r\n  // Example: \"xl/worksheets/sheet1.xml\".\r\n  if (!sheetId || !filePaths.sheets[sheetId]) {\r\n    throw createSheetNotFoundError(options.sheet, properties.sheets)\r\n  }\r\n\r\n  // Parse sheet data.\r\n  const sheet = parseSheet(\r\n    getXmlFileContent(filePaths.sheets[sheetId]),\r\n    xml,\r\n    values,\r\n    styles,\r\n    properties,\r\n    options\r\n  )\r\n\r\n  options = {\r\n    // Create a `rowIndexMap` for the original dataset, if not passed,\r\n    // because \"empty\" rows will be dropped from the input data.\r\n    rowMap: [],\r\n    ...options\r\n  }\r\n\r\n  // Get spreadsheet data.\r\n  const data = getData(sheet, options)\r\n\r\n  // Can return properties, if required.\r\n  if (options.properties) {\r\n    return {\r\n      data,\r\n      properties\r\n    }\r\n  }\r\n\r\n  // Return spreadsheet data.\r\n  return data\r\n}\r\n\r\nfunction getSheetId(sheet, sheets) {\r\n  if (typeof sheet === 'number') {\r\n    const _sheet = sheets[sheet - 1]\r\n    return _sheet && _sheet.relationId\r\n  }\r\n  for (const _sheet of sheets) {\r\n    if (_sheet.name === sheet) {\r\n      return _sheet.relationId\r\n    }\r\n  }\r\n}\r\n\r\nfunction createSheetNotFoundError(sheet, sheets) {\r\n  const sheetsList = sheets && sheets.map((sheet, i) => `\"${sheet.name}\" (#${i + 1})`).join(', ')\r\n  return new Error(`Sheet ${typeof sheet === 'number' ? '#' + sheet : '\"' + sheet + '\"'} not found in the *.xlsx file.${sheets ? ' Available sheets: ' + sheetsList + '.' : ''}`)\r\n}", "export default class InvalidError extends Error {\r\n  constructor(reason) {\r\n    super('invalid')\r\n    this.reason = reason\r\n  }\r\n}", "import InvalidError from './InvalidError.js'\r\n\r\nexport default function NumberType(value) {\r\n  // An XLSX file editing software might not always correctly\r\n  // detect numeric values in string-type cells. Users won't bother\r\n  // manually selecting a cell type, so the editing software has to guess\r\n  // based on the user's input. One can assume that such auto-detection\r\n  // might not always work.\r\n  //\r\n  // So, if a cell is supposed to be a numeric one, convert a string value to a number.\r\n  //\r\n  if (typeof value === 'string') {\r\n    const stringifiedValue = value\r\n    value = Number(value)\r\n    if (String(value) !== stringifiedValue) {\r\n      throw new InvalidError('not_a_number')\r\n    }\r\n  }\r\n  if (typeof value !== 'number') {\r\n    throw new InvalidError('not_a_number')\r\n  }\r\n  if (isNaN(value)) {\r\n    throw new InvalidError('invalid_number')\r\n  }\r\n  // At this point, `value` can only be a number.\r\n  //\r\n  // The global `isFinite()` function filters out:\r\n  // * NaN\r\n  // * -Infinity\r\n  // * Infinity\r\n  //\r\n  // All other values pass (including non-numbers).\r\n  //\r\n  if (!isFinite(value)) {\r\n    throw new InvalidError('out_of_bounds')\r\n  }\r\n  return value\r\n}", "import InvalidError from './InvalidError.js'\r\n\r\nexport default function StringType(value) {\r\n  if (typeof value === 'string') {\r\n    return value\r\n  }\r\n  // Excel tends to perform a forced automatic convertion of string-type values\r\n  // to number-type ones when the user has input them. Otherwise, users wouldn't\r\n  // be able to perform formula calculations on those cell values because users\r\n  // won't bother manually choosing a \"numeric\" cell type for each cell, and\r\n  // even if they did, choosing a \"numeric\" cell type every time wouldn't be an\r\n  // acceptable \"user experience\".\r\n  //\r\n  // So, if a cell value is supposed to be a string and Excel has automatically\r\n  // converted it to a number, perform a backwards conversion.\r\n  //\r\n  if (typeof value === 'number') {\r\n    if (isNaN(value)) {\r\n      throw new InvalidError('invalid_number')\r\n    }\r\n    // The global `isFinite()` function filters out:\r\n    // * NaN\r\n    // * -Infinity\r\n    // * Infinity\r\n    //\r\n    // All other values pass (including non-numbers).\r\n    //\r\n    if (!isFinite(value)) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return String(value)\r\n  }\r\n  throw new InvalidError('not_a_string')\r\n}", "import InvalidError from './InvalidError.js'\r\n\r\nexport default function BooleanType(value) {\r\n\tif (typeof value === 'boolean') {\r\n    return value\r\n  }\r\n  throw new InvalidError('not_a_boolean')\r\n}", "import parseDate from '../read/parseDate.js'\r\nimport InvalidError from './InvalidError.js'\r\n\r\nexport default function DateType(value, { properties }) {\r\n\t// XLSX has no specific format for dates.\r\n  // Sometimes a date can be heuristically detected.\r\n  // https://github.com/catamphetamine/read-excel-file/issues/3#issuecomment-395770777\r\n  if (value instanceof Date) {\r\n    if (isNaN(value.valueOf())) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return value\r\n  }\r\n  if (typeof value === 'number') {\r\n    if (isNaN(value)) {\r\n      throw new InvalidError('invalid_number')\r\n    }\r\n    if (!isFinite(value)) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    const date = parseDate(value, properties)\r\n    if (isNaN(date.valueOf())) {\r\n      throw new InvalidError('out_of_bounds')\r\n    }\r\n    return date\r\n  }\r\n  throw new InvalidError('not_a_date')\r\n}", "import NumberType from '../../types/Number.js'\r\nimport StringType from '../../types/String.js'\r\nimport BooleanType from '../../types/Boolean.js'\r\nimport DateType from '../../types/Date.js'\r\n\r\nconst DEFAULT_OPTIONS = {\r\n  schemaPropertyValueForMissingColumn: undefined,\r\n  schemaPropertyValueForUndefinedCellValue: undefined,\r\n  schemaPropertyValueForNullCellValue: null,\r\n  schemaPropertyShouldSkipRequiredValidationForMissingColumn: () => false,\r\n  // `getEmptyObjectValue(object, { path })` applies to both the top-level object\r\n  // and any of its sub-objects.\r\n  getEmptyObjectValue: () => null,\r\n  getEmptyArrayValue: () => null,\r\n  isColumnOriented: false,\r\n  arrayValueSeparator: ','\r\n}\r\n\r\n/**\r\n * (this function is exported from `read-excel-file/map`)\r\n * Converts spreadsheet-alike data structure into an array of objects.\r\n * The first row should be the list of column headers.\r\n * @param {any[][]} data - An array of rows, each row being an array of cells.\r\n * @param {object} schema\r\n * @param {object} [options]\r\n * @param {null} [options.schemaPropertyValueForMissingColumn] — By default, when some of the `schema` columns are missing in the input `data`, those properties are set to `undefined` in the output objects. Pass `schemaPropertyValueForMissingColumn: null` to set such \"missing column\" properties to `null` in the output objects.\r\n * @param {null} [options.schemaPropertyValueForNullCellValue] — By default, when it encounters a `null` value in a cell in input `data`, it sets it to `undefined` in the output object. Pass `schemaPropertyValueForNullCellValue: null` to make it set such values as `null`s in output objects.\r\n * @param {null} [options.schemaPropertyValueForUndefinedCellValue] — By default, when it encounters an `undefined` value in a cell in input `data`, it it sets it to `undefined` in the output object. Pass `schemaPropertyValueForUndefinedCellValue: null` to make it set such values as `null`s in output objects.\r\n * @param {boolean} [options.schemaPropertyShouldSkipRequiredValidationForMissingColumn(column: string, { object })] — By default, it does apply `required` validation to `schema` properties for which columns are missing in the input `data`. One could pass a custom `schemaPropertyShouldSkipRequiredValidationForMissingColumn(column, { object })` to disable `required` validation for missing columns in some or all cases.\r\n * @param {function} [options.getEmptyObjectValue(object, { path })] — By default, it returns `null` for an \"empty\" resulting object. One could override that value using `getEmptyObjectValue(object, { path })` parameter. The value applies to both top-level object and any nested sub-objects in case of a nested schema, hence the additional `path?: string` parameter.\r\n * @param {function} [getEmptyArrayValue(array, { path })] — By default, it returns `null` for an \"empty\" array value. One could override that value using `getEmptyArrayValue(array, { path })` parameter.\r\n * @param {boolean} [options.isColumnOriented] — By default, the headers are assumed to be the first row in the `data`. Pass `isColumnOriented: true` if the headers are the first column in the `data`. i.e. if `data` is \"transposed\".\r\n * @param {object} [options.rowIndexMap] — Custom row index mapping `data` rows. If present, will overwrite the indexes of `data` rows with the indexes from this `rowIndexMap`.\r\n * @return {object[]}\r\n */\r\nexport default function(data, schema, options) {\r\n  if (options) {\r\n    options = {\r\n      ...DEFAULT_OPTIONS,\r\n      ...options\r\n    }\r\n  } else {\r\n    options = DEFAULT_OPTIONS\r\n  }\r\n\r\n  const {\r\n    isColumnOriented,\r\n    rowIndexMap\r\n  } = options\r\n\r\n  validateSchema(schema)\r\n\r\n  if (isColumnOriented) {\r\n    data = transpose(data)\r\n  }\r\n\r\n  const columns = data[0]\r\n\r\n  const results = []\r\n  const errors = []\r\n\r\n  for (let i = 1; i < data.length; i++) {\r\n    const result = read(schema, data[i], i, undefined, columns, errors, options)\r\n    results.push(result)\r\n  }\r\n\r\n  // Set the correct `row` number in `errors` if a custom `rowIndexMap` is supplied.\r\n  if (rowIndexMap) {\r\n    for (const error of errors) {\r\n      // Convert the `row` index in `data` to the\r\n      // actual `row` index in the spreadsheet.\r\n      // `- 1` converts row number to row index.\r\n      // `+ 1` converts row index to row number.\r\n      error.row = rowIndexMap[error.row - 1] + 1\r\n    }\r\n  }\r\n\r\n  return {\r\n    rows: results,\r\n    errors\r\n  }\r\n}\r\n\r\nfunction read(schema, row, rowIndex, path, columns, errors, options) {\r\n  const object = {}\r\n  let isEmptyObject = true\r\n\r\n  const createError = ({\r\n    column,\r\n    value,\r\n    error: errorMessage,\r\n    reason\r\n  }) => {\r\n    const error = {\r\n      error: errorMessage,\r\n      row: rowIndex + 1,\r\n      column,\r\n      value\r\n    }\r\n    if (reason) {\r\n      error.reason = reason\r\n    }\r\n    if (schema[column].type) {\r\n      error.type = schema[column].type\r\n    }\r\n    return error\r\n  }\r\n\r\n  const pendingRequiredChecks = []\r\n\r\n  // For each schema entry.\r\n  for (const key of Object.keys(schema)) {\r\n    const schemaEntry = schema[key]\r\n    const isNestedSchema = typeof schemaEntry.type === 'object' && !Array.isArray(schemaEntry.type)\r\n\r\n    // The path of this property inside the resulting object.\r\n    const propertyPath = `${path || ''}.${schemaEntry.prop}`\r\n\r\n    // Read the cell value for the schema entry.\r\n    let cellValue\r\n    const columnIndex = columns.indexOf(key)\r\n    const isMissingColumn = columnIndex < 0\r\n    if (!isMissingColumn) {\r\n      cellValue = row[columnIndex]\r\n    }\r\n\r\n    let value\r\n    let error\r\n    let reason\r\n\r\n    // Get property `value` from cell value.\r\n    if (isNestedSchema) {\r\n      value = read(schemaEntry.type, row, rowIndex, propertyPath, columns, errors, options)\r\n    } else {\r\n      if (isMissingColumn) {\r\n        value = options.schemaPropertyValueForMissingColumn\r\n      }\r\n      else if (cellValue === undefined) {\r\n        value = options.schemaPropertyValueForUndefinedCellValue\r\n      }\r\n      else if (cellValue === null) {\r\n        value = options.schemaPropertyValueForNullCellValue\r\n      }\r\n      else if (Array.isArray(schemaEntry.type)) {\r\n        const array = parseArray(cellValue, options.arrayValueSeparator).map((_value) => {\r\n          if (error) {\r\n            return\r\n          }\r\n          const result = parseValue(_value, schemaEntry, options)\r\n          if (result.error) {\r\n            // In case of an error, `value` won't be returned and will just be reported\r\n            // as part of an `error` object, so it's fine assigning just an element of the array.\r\n            value = _value\r\n            error = result.error\r\n            reason = result.reason\r\n          }\r\n          return result.value\r\n        })\r\n        if (!error) {\r\n          const isEmpty = array.every(isEmptyValue)\r\n          value = isEmpty ? options.getEmptyArrayValue(array, { path: propertyPath }) : array\r\n        }\r\n      } else {\r\n        const result = parseValue(cellValue, schemaEntry, options)\r\n        error = result.error\r\n        reason = result.reason\r\n        value = error ? cellValue : result.value\r\n      }\r\n    }\r\n\r\n    // Apply `required` validation if the value is \"empty\".\r\n    if (!error && isEmptyValue(value)) {\r\n      if (schemaEntry.required) {\r\n        // Will perform this `required()` validation in the end,\r\n        // when all properties of the mapped object have been mapped.\r\n        pendingRequiredChecks.push({ column: key, value, isMissingColumn })\r\n      }\r\n    }\r\n\r\n    if (error) {\r\n      // If there was an error then the property value in the `object` will be `undefined`,\r\n      // i.e it won't add the property value to the mapped object.\r\n      errors.push(createError({\r\n        column: key,\r\n        value,\r\n        error,\r\n        reason\r\n      }))\r\n    } else {\r\n      // Possibly unmark the mapped object as \"empty\".\r\n      if (isEmptyObject && !isEmptyValue(value)) {\r\n        isEmptyObject = false\r\n      }\r\n      // Set the value in the mapped object.\r\n      // Skip setting `undefined` values because they're already `undefined`.\r\n      if (value !== undefined) {\r\n        object[schemaEntry.prop] = value\r\n      }\r\n    }\r\n  }\r\n\r\n  // Return `null` for an \"empty\" mapped object.\r\n  if (isEmptyObject) {\r\n    return options.getEmptyObjectValue(object, { path })\r\n  }\r\n\r\n  // Perform any `required` validations.\r\n  for (const { column, value, isMissingColumn } of pendingRequiredChecks) {\r\n    // Can optionally skip `required` validation for missing columns.\r\n    const skipRequiredValidation = isMissingColumn && options.schemaPropertyShouldSkipRequiredValidationForMissingColumn(column, { object })\r\n    if (!skipRequiredValidation) {\r\n      const { required } = schema[column]\r\n      const isRequired = typeof required === 'boolean' ? required : required(object)\r\n      if (isRequired) {\r\n        errors.push(createError({\r\n          column,\r\n          value,\r\n          error: 'required'\r\n        }))\r\n      }\r\n    }\r\n  }\r\n\r\n  // Return the mapped object.\r\n  return object\r\n}\r\n\r\n/**\r\n * Converts textual value to a javascript typed value.\r\n * @param  {any} value\r\n * @param  {object} schemaEntry\r\n * @return {{ value: any, error: string }}\r\n */\r\nexport function parseValue(value, schemaEntry, options) {\r\n  if (value === null) {\r\n    return { value: null }\r\n  }\r\n  let result\r\n  if (schemaEntry.parse) {\r\n    result = parseCustomValue(value, schemaEntry.parse)\r\n  } else if (schemaEntry.type) {\r\n    result = parseValueOfType(\r\n      value,\r\n      // Supports parsing array types.\r\n      // See `parseArray()` function for more details.\r\n      // Example `type`: String[]\r\n      // Input: 'Barack Obama, \"String, with, colons\", Donald Trump'\r\n      // Output: ['Barack Obama', 'String, with, colons', 'Donald Trump']\r\n      Array.isArray(schemaEntry.type) ? schemaEntry.type[0] : schemaEntry.type,\r\n      options\r\n    )\r\n  } else {\r\n    result = { value: value }\r\n    // throw new Error('Invalid schema entry: no .type and no .parse():\\n\\n' + JSON.stringify(schemaEntry, null, 2))\r\n  }\r\n  // If errored then return the error.\r\n  if (result.error) {\r\n    return result\r\n  }\r\n  if (result.value !== null) {\r\n    if (schemaEntry.oneOf && schemaEntry.oneOf.indexOf(result.value) < 0) {\r\n      return { error: 'invalid', reason: 'unknown' }\r\n    }\r\n    if (schemaEntry.validate) {\r\n      try {\r\n        schemaEntry.validate(result.value)\r\n      } catch (error) {\r\n        return { error: error.message }\r\n      }\r\n    }\r\n  }\r\n  return result\r\n}\r\n\r\n/**\r\n * Converts textual value to a custom value using supplied `.parse()`.\r\n * @param  {any} value\r\n * @param  {function} parse\r\n * @return {{ value: any, error: string }}\r\n */\r\nfunction parseCustomValue(value, parse) {\r\n  try {\r\n    value = parse(value)\r\n    if (value === undefined) {\r\n      return { value: null }\r\n    }\r\n    return { value }\r\n  } catch (error) {\r\n    const result = { error: error.message }\r\n    if (error.reason) {\r\n      result.reason = error.reason;\r\n    }\r\n    return result\r\n  }\r\n}\r\n\r\n/**\r\n * Converts textual value to a javascript typed value.\r\n * @param  {any} value\r\n * @param  {} type\r\n * @return {{ value: (string|number|Date|boolean), error: string, reason?: string }}\r\n */\r\nfunction parseValueOfType(value, type, options) {\r\n  switch (type) {\r\n    case String:\r\n      return parseCustomValue(value, StringType)\r\n\r\n    case Number:\r\n      return parseCustomValue(value, NumberType)\r\n\r\n    case Date:\r\n      return parseCustomValue(value, (value) => DateType(value, { properties: options.properties }))\r\n\r\n    case Boolean:\r\n      return parseCustomValue(value, BooleanType)\r\n\r\n    default:\r\n      if (typeof type === 'function') {\r\n        return parseCustomValue(value, type)\r\n      }\r\n      throw new Error(`Unsupported schema type: ${type && type.name || type}`)\r\n  }\r\n}\r\n\r\nexport function getBlock(string, endCharacter, startIndex) {\r\n  let i = 0\r\n  let substring = ''\r\n  let character\r\n  while (startIndex + i < string.length) {\r\n    const character = string[startIndex + i]\r\n    if (character === endCharacter) {\r\n      return [substring, i]\r\n    }\r\n    else if (character === '\"') {\r\n      const block = getBlock(string, '\"', startIndex + i + 1)\r\n      substring += block[0]\r\n      i += '\"'.length + block[1] + '\"'.length\r\n    }\r\n    else {\r\n      substring += character\r\n      i++\r\n    }\r\n  }\r\n  return [substring, i]\r\n}\r\n\r\n/**\r\n * Parses a string of comma-separated substrings into an array of substrings.\r\n * (the `export` is just for tests)\r\n * @param  {string} string — A string of comma-separated substrings.\r\n * @return {string[]} An array of substrings.\r\n */\r\nexport function parseArray(string, arrayValueSeparator) {\r\n  const blocks = []\r\n  let index = 0\r\n  while (index < string.length) {\r\n    const [substring, length] = getBlock(string, arrayValueSeparator, index)\r\n    index += length + arrayValueSeparator.length\r\n    blocks.push(substring.trim())\r\n  }\r\n  return blocks\r\n}\r\n\r\n// Transpose a 2D array.\r\n// https://stackoverflow.com/questions/17428587/transposing-a-2d-array-in-javascript\r\nconst transpose = array => array[0].map((_, i) => array.map(row => row[i]))\r\n\r\nfunction validateSchema(schema) {\r\n  for (const key of Object.keys(schema)) {\r\n    const entry = schema[key]\r\n    if (!entry.prop) {\r\n      throw new Error(`\"prop\" not defined for schema entry \"${key}\".`)\r\n    }\r\n  }\r\n}\r\n\r\nfunction isEmptyValue(value) {\r\n  return value === undefined || value === null\r\n}", "import convertToJson from './convertToJson.js'\r\n\r\nexport default function convertToJsonLegacyBehavior(data, schema, options = {}) {\r\n\tconst {\r\n\t\tincludeNullValues,\r\n\t\tignoreEmptyRows,\r\n\t\tisColumnOriented,\r\n\t\trowMap\r\n\t} = options\r\n\tconst defaultConversionOptions = {\r\n\t\tschemaPropertyValueForMissingColumn: undefined,\r\n\t\tschemaPropertyValueForUndefinedCellValue: undefined,\r\n\t\tschemaPropertyValueForNullCellValue: undefined,\r\n\t\tschemaPropertyShouldSkipRequiredValidationForMissingColumn: (column, { path }) => false,\r\n\t\tgetEmptyObjectValue: (object, { path }) => path ? undefined : null,\r\n\t\tgetEmptyArrayValue: () => null,\r\n\t\tarrayValueSeparator: ','\r\n\t}\r\n\tif (includeNullValues) {\r\n\t\tdefaultConversionOptions.schemaPropertyValueForMissingColumn = null\r\n\t\tdefaultConversionOptions.schemaPropertyValueForUndefinedCellValue = null\r\n\t\tdefaultConversionOptions.schemaPropertyValueForNullCellValue = null\r\n\t\tdefaultConversionOptions.getEmptyObjectValue = (object, { path }) => null\r\n\t}\r\n\tconst result = convertToJson(data, schema, {\r\n\t\t...defaultConversionOptions,\r\n\t\trowIndexMap: rowMap,\r\n\t\tisColumnOriented\r\n\t})\r\n\tif (ignoreEmptyRows !== false) {\r\n\t\tresult.rows = result.rows.filter(_ => _ !== defaultConversionOptions.getEmptyObjectValue(_, { path: undefined }))\r\n\t}\r\n\treturn result\r\n}", "// Renames some of the `react-excel-file` options to `convertToJson()` options.\r\nexport default function convertToJsonSpreadsheetBehavior(convertToJson, data, schema, options = {}) {\r\n\tconst {\r\n\t\tschemaPropertyValueForEmptyCell,\r\n\t\t...restOptions\r\n\t} = options\r\n\treturn convertToJson(data, schema, {\r\n\t\t...restOptions,\r\n\t\tschemaPropertyValueForNullCellValue: schemaPropertyValueForEmptyCell\r\n\t})\r\n}", "export default function convertMapToSchema(map) {\r\n\tconst schema = {}\r\n\tfor (const key of Object.keys(map)) {\r\n\t\tlet prop = map[key]\r\n\t\tlet type\r\n\t\tif (typeof prop === 'object') {\r\n\t\t\tprop = Object.keys(map[key])[0]\r\n\t\t\ttype = convertMapToSchema(map[key][prop])\r\n\t\t}\r\n\t\tschema[key] = {\r\n\t\t\tprop\r\n\t\t}\r\n\t\tif (type) {\r\n\t\t\tschema[key].type = type\r\n\t\t}\r\n\t}\r\n\treturn schema\r\n}", "import readXlsx from './readXlsx.js'\r\n\r\nimport convertToJsonLegacyBehavior from './schema/convertToJson.legacy.js'\r\nimport convertToJsonSpreadsheetBehavior from './schema/convertToJson.spreadsheet.js'\r\n\r\nimport convertMapToSchema from './schema/convertMapToSchema.js'\r\n\r\nexport default function readXlsxFileContents(entries, xml, { schema, map, ...options}) {\r\n\tif (!schema && map) {\r\n\t\tschema = convertMapToSchema(map)\r\n\t}\r\n\t// `readXlsx()` adds `options.rowMap`, if not passed.\r\n\tconst result = readXlsx(entries, xml, { ...options, properties: schema || options.properties })\r\n\tif (schema) {\r\n\t\treturn convertToJsonSpreadsheetBehavior(convertToJsonLegacyBehavior, result.data, schema, {\r\n\t\t\t...options,\r\n\t\t\tproperties: result.properties\r\n\t\t})\r\n\t}\r\n\treturn result\r\n}", "import xml from '../xml/xmlBrowser.js'\r\n\r\nimport unpackXlsxFile from './unpackXlsxFileBrowser.js'\r\nimport readXlsxFileContents from './readXlsxFileContents.js'\r\n\r\n/**\r\n * Reads XLSX file into a 2D array of cells in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @param  {object?} options\r\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\r\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\r\n */\r\nexport default function readXlsxFile(file, options = {}) {\r\n\treturn unpackXlsxFile(file)\r\n\t\t.then((entries) => readXlsxFileContents(entries, xml, options))\r\n}", "import readXlsxFile from './readXlsxFileBrowser.js'\r\n\r\n/**\r\n * Reads the list of sheet names in an XLSX file in a web browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @return {Promise} Resolves to an array of objects of shape `{ name: string }`.\r\n */\r\nexport default function readSheetNames(file) {\r\n\treturn readXlsxFile(file, { getSheets: true })\r\n\t\t.then(sheets => sheets.map(sheet => sheet.name))\r\n}", "import InvalidError from './InvalidError.js'\r\nimport NumberType from './Number.js'\r\n\r\nexport default function Integer(value) {\r\n\tvalue = NumberType(value)\r\n  if (!isInteger(value)) {\r\n    throw new InvalidError('not_an_integer')\r\n  }\r\n  return value\r\n}\r\n\r\nexport function isInteger(x) {\r\n\t// https://stackoverflow.com/questions/14636536/how-to-check-if-a-variable-is-an-integer-in-javascript\r\n\treturn (x | 0) === x\r\n}", "import InvalidError from './InvalidError.js'\r\n\r\nexport default function Email(value) {\r\n  if (typeof value === 'string') {\r\n    if (isEmail(value)) {\r\n      return value\r\n    }\r\n    throw new InvalidError('not_an_email')\r\n  }\r\n  throw new InvalidError('not_a_string')\r\n}\r\n\r\nconst regexp = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i\r\n\r\nexport function isEmail(value) {\r\n\treturn regexp.test(value)\r\n}", "import InvalidError from './InvalidError.js'\r\n\r\nexport default function URL(value) {\r\n  if (typeof value === 'string') {\r\n    if (isURL(value)) {\r\n      return value\r\n    }\r\n    throw new InvalidError('not_a_url')\r\n  }\r\n  throw new InvalidError('not_a_string')\r\n}\r\n\r\n// URL regexp explanation:\r\n//\r\n// /^\r\n//\r\n// \t(?:\r\n// \t  // Matches optional \"http(s):\" or \"ftp:\":\r\n// \t\t(?:\r\n// \t\t\t(?:https?|ftp):\r\n// \t\t)?\r\n//\r\n// \t  // Matches \"//\" (required):\r\n// \t\t\\/\\/\r\n// \t)\r\n//\r\n// \t// Matches a valid non-local IP address:\r\n// \t(?:\r\n// \t\t(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])\r\n// \t\t(?:\r\n// \t\t\t\\.\r\n// \t\t\t(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])\r\n// \t\t){2}\r\n// \t\t(?:\r\n// \t\t\t\\.\r\n// \t\t\t(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4])\r\n// \t\t)\r\n//\r\n// \t  // Or,\r\n// \t\t|\r\n//\r\n// \t  // Matches an alpha-numeric domain name.\r\n// \t\t(?:\r\n// \t\t\t(?:\r\n// \t\t\t\t[a-z0-9\\u00a1-\\uffff]\r\n// \t\t\t\t[a-z0-9\\u00a1-\\uffff_-]{0,62}\r\n// \t\t\t)?\r\n// \t\t\t[a-z0-9\\u00a1-\\uffff]\r\n// \t\t\t\\.\r\n// \t\t)*\r\n// \t\t(?:\r\n// \t    // Domain zone: \"com\", \"net\", etc (required):\r\n// \t\t\t[a-z\\u00a1-\\uffff]{2,}\r\n// \t\t)\r\n// \t)\r\n//\r\n// \t// Matches a colon and a port number:\r\n// \t(?::\\d{2,5})?\r\n//\r\n// \t// Matches everything after the \"origin\":\r\n// \t// * pathname\r\n// \t// * query\r\n// \t// * hash\r\n// \t(?:[/?#]\\S*)?\r\n//\r\n// $/i\r\n\r\nconst regexp = /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z0-9\\u00a1-\\uffff][a-z0-9\\u00a1-\\uffff_-]{0,62})?[a-z0-9\\u00a1-\\uffff]\\.)*(?:[a-z\\u00a1-\\uffff]{2,}))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i\r\n\r\n// https://stackoverflow.com/questions/8667070/javascript-regular-expression-to-validate-url\r\nexport function isURL(value) {\r\n\treturn regexp.test(value)\r\n}"],
  "mappings": "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",
  "names": ["createDocument", "content", "DOMParser", "parseFromString", "trim", "err", "l", "_a", "_b", "i", "td", "_a", "err", "fl", "Deflate", "AsyncDeflate", "Inflate", "AsyncInflate", "Gzip", "Gunzip", "AsyncGunzip", "Zlib", "Unzlib", "AsyncUnzlib", "Decompress", "AsyncDecompress", "DecodeUTF8", "_a", "ch", "EncodeUTF8", "_a", "_a", "fl", "ZipPassThrough", "ZipDeflate", "AsyncZipDeflate", "err", "Zip", "err", "_a", "_b", "UnzipPassThrough", "UnzipInflate", "AsyncUnzipInflate", "err", "Unzip", "_a", "err", "dat", "final", "_a", "input", "File", "arrayBuffer", "then", "unpackXlsxArrayBuffer", "Blob", "archive", "Uint8Array", "contents", "unzipSync", "Promise", "resolve", "getContents", "unzippedFiles", "_i", "_Object$keys", "Object", "keys", "length", "key", "strFromU8", "findChild", "node", "tagName", "i", "childNodes", "length", "childNode", "nodeType", "getTagName", "findChildren", "results", "push", "forEach", "func", "map", "NAMESPACE_REG_EXP", "element", "replace", "getOuterXml", "textContent", "xml", "j", "attributes", "name", "value", "getCells", "document", "worksheet", "documentElement", "sheetData", "findChild", "cells", "forEach", "row", "cell", "push", "getCellValue", "document", "node", "findChild", "getCellInlineStringValue", "firstChild", "getTagName", "textContent", "getDimensions", "worksheet", "documentElement", "dimensions", "getAttribute", "getBaseStyles", "styleSheet", "cellStyleXfs", "findChildren", "getCellStyles", "cellXfs", "getNumberFormats", "numberFormats", "numFmts", "getSharedStrings", "sst", "map", "string", "t", "value", "forEach", "r", "getWorkbookProperties", "workbook", "getRelationships", "relationships", "getSheets", "sheets", "content", "xml", "book", "createDocument", "properties", "workbookProperties", "getWorkbookProperties", "getAttribute", "epoch1904", "sheets", "addSheetInfo", "sheet", "push", "id", "name", "relationId", "getSheets", "forEach", "content", "xml", "document", "createDocument", "filePaths", "sheets", "sharedStrings", "undefined", "styles", "addFilePathInfo", "relationship", "filePath", "getAttribute", "fileType", "getFilePath", "getRelationships", "forEach", "path", "slice", "length", "content", "xml", "doc", "createDocument", "baseStyles", "getBaseStyles", "map", "parseCellStyle", "numberFormats", "getNumberFormats", "parseNumberFormatStyle", "reduce", "formats", "format", "id", "getCellStyle", "xf", "hasAttribute", "_objectSpread", "xfId", "getCellStyles", "numFmt", "getAttribute", "template", "numFmts", "style", "numberFormatId", "numberFormat", "content", "xml", "getSharedStrings", "createDocument", "excelSerialDate", "options", "epoch1904", "daysBeforeUnixEpoch", "hour", "Date", "Math", "round", "styleId", "styles", "options", "style", "Error", "concat", "numberFormat", "BUILT_IN_DATE_NUMBER_FORMAT_IDS", "indexOf", "Number", "id", "dateFormat", "template", "smartDateParser", "isDateTemplate", "DATE_FORMAT_WEIRD_PREFIX", "DATE_FORMAT_WEIRD_POSTFIX", "toLowerCase", "replace", "tokens", "split", "_iterator", "_createForOfIteratorHelperLoose", "_step", "done", "token", "value", "DATE_TEMPLATE_TOKENS", "value", "type", "_ref", "getInlineStringValue", "getInlineStringXml", "getStyleId", "styles", "values", "properties", "options", "parseString", "undefined", "Error", "concat", "sharedStringIndex", "Number", "isNaN", "length", "decodeError", "parsedDate", "Date", "valueOf", "isDateTimestampNumber", "isDateTimestamp", "parseNumberDefault", "parseDate", "parseNumber", "TypeError", "errorCode", "trim", "stringifiedNumber", "parsedNumber", "LETTERS", "calculateDimensions", "cells", "comparator", "a", "b", "allRows", "map", "cell", "row", "sort", "allCols", "column", "minRow", "maxRow", "length", "minCol", "maxCol", "columnLettersToNumber", "columnLetters", "n", "i", "indexOf", "parseCellCoordinates", "coords", "split", "parseInt", "trim", "node", "sheet", "xml", "values", "styles", "properties", "options", "coords", "parseCellCoordinates", "getAttribute", "valueElement", "getCellValue", "value", "textContent", "type", "hasAttribute", "row", "column", "parseCellValue", "getInlineStringValue", "getCellInlineStringValue", "getInlineStringXml", "getOuterXml", "getStyleId", "sheet", "xml", "values", "styles", "properties", "options", "cells", "getCells", "length", "map", "node", "parseCell", "sheet", "dimensions", "getDimensions", "split", "map", "parseCellCoordinates", "_ref", "_ref2", "_slicedToArray", "row", "column", "length", "content", "xml", "values", "styles", "properties", "options", "sheet", "createDocument", "cells", "parseCells", "dimensions", "parseDimensions", "calculateDimensions", "data", "_ref", "arguments", "length", "undefined", "rowIndexMap", "_ref$accessor", "accessor", "_", "onlyTrimAtTheEnd", "i", "empty", "_iterator", "_createForOfIteratorHelperLoose", "_step", "done", "cell", "value", "splice", "data", "_ref", "arguments", "length", "undefined", "_ref$accessor", "accessor", "_", "onlyTrimAtTheEnd", "i", "empty", "_iterator", "_createForOfIteratorHelperLoose", "_step", "done", "row", "value", "j", "splice", "sheet", "options", "dimensions", "cells", "length", "_dimensions", "_slicedToArray", "leftTop", "rightBottom", "colsCount", "column", "rowsCount", "row", "data", "Array", "i", "j", "_iterator", "_createForOfIteratorHelperLoose", "_step", "done", "cell", "value", "rowIndex", "columnIndex", "rowIndexMap", "rowMap", "dropEmptyRows", "dropEmptyColumns", "onlyTrimAtTheEnd", "transformData", "contents", "xml", "options", "arguments", "length", "undefined", "sheet", "_objectSpread", "getXmlFileContent", "filePath", "Error", "concat", "filePaths", "parseFilePaths", "values", "sharedStrings", "parseSharedStrings", "styles", "parseStyles", "properties", "parseProperties", "getSheets", "sheets", "map", "_ref", "name", "sheetId", "getSheetId", "createSheetNotFoundError", "parseSheet", "rowMap", "data", "getData", "_sheet", "relationId", "_iterator", "_createForOfIteratorHelperLoose", "_step", "done", "value", "sheetsList", "i", "join", "InvalidError", "_Error", "_inherits", "_super", "_createSuper", "reason", "_this", "_classCallCheck", "call", "_createClass", "_wrapNativeSuper", "Error", "value", "stringifiedValue", "Number", "String", "InvalidError", "isNaN", "isFinite", "value", "isNaN", "InvalidError", "isFinite", "String", "value", "InvalidError", "value", "_ref", "properties", "Date", "isNaN", "valueOf", "InvalidError", "isFinite", "date", "parseDate", "DEFAULT_OPTIONS", "schemaPropertyValueForMissingColumn", "undefined", "schemaPropertyValueForUndefinedCellValue", "schemaPropertyValueForNullCellValue", "schemaPropertyShouldSkipRequiredValidationForMissingColumn", "getEmptyObjectValue", "getEmptyArrayValue", "isColumnOriented", "arrayValueSeparator", "data", "schema", "options", "_objectSpread", "_options", "rowIndexMap", "validateSchema", "transpose", "columns", "results", "errors", "i", "length", "result", "read", "push", "_iterator", "_createForOfIteratorHelperLoose", "_step", "done", "error", "value", "row", "rows", "rowIndex", "path", "object", "isEmptyObject", "createError", "_ref", "column", "errorMessage", "reason", "type", "pendingRequiredChecks", "_loop", "key", "_Object$keys", "_i", "schemaEntry", "isNestedSchema", "_typeof", "Array", "isArray", "propertyPath", "concat", "prop", "cellValue", "columnIndex", "indexOf", "isMissingColumn", "array", "parseArray", "map", "_value", "parseValue", "isEmpty", "every", "isEmptyValue", "required", "Object", "keys", "_i2", "_pendingRequiredCheck", "_pendingRequiredCheck2", "skipRequiredValidation", "isRequired", "parse", "parseCustomValue", "parseValueOfType", "oneOf", "validate", "message", "String", "StringType", "Number", "NumberType", "Date", "DateType", "properties", "Boolean", "BooleanType", "Error", "name", "getBlock", "string", "endCharacter", "startIndex", "substring", "character", "block", "blocks", "index", "_getBlock", "_getBlock2", "_slicedToArray", "trim", "_", "_i3", "_Object$keys2", "entry", "data", "schema", "options", "arguments", "length", "undefined", "includeNullValues", "ignoreEmptyRows", "isColumnOriented", "rowMap", "defaultConversionOptions", "schemaPropertyValueForMissingColumn", "schemaPropertyValueForUndefinedCellValue", "schemaPropertyValueForNullCellValue", "schemaPropertyShouldSkipRequiredValidationForMissingColumn", "column", "_ref", "path", "getEmptyObjectValue", "object", "_ref2", "getEmptyArrayValue", "arrayValueSeparator", "_ref3", "result", "convertToJson", "_objectSpread", "rowIndexMap", "rows", "filter", "_", "convertToJson", "data", "schema", "options", "arguments", "length", "undefined", "schemaPropertyValueForEmptyCell", "restOptions", "_objectWithoutProperties", "_excluded", "_objectSpread", "schemaPropertyValueForNullCellValue", "map", "schema", "_i", "_Object$keys", "Object", "keys", "length", "key", "prop", "type", "_typeof", "convertMapToSchema", "entries", "xml", "_ref", "schema", "map", "options", "_objectWithoutProperties", "_excluded", "convertMapToSchema", "result", "readXlsx", "_objectSpread", "properties", "convertToJsonSpreadsheetBehavior", "convertToJsonLegacyBehavior", "data", "file", "options", "arguments", "length", "undefined", "unpackXlsxFile", "then", "entries", "readXlsxFileContents", "xml", "file", "readXlsxFile", "getSheets", "then", "sheets", "map", "sheet", "name", "value", "NumberType", "isInteger", "InvalidError", "x", "value", "isEmail", "InvalidError", "regexp", "test", "URL", "value", "isURL", "InvalidError", "regexp", "test"]
}
